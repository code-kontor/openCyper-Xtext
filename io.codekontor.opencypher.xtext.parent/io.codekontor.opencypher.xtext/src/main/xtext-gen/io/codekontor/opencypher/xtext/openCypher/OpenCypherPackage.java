/**
 * generated by Xtext 2.25.0
 */
package io.codekontor.opencypher.xtext.openCypher;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see io.codekontor.opencypher.xtext.openCypher.OpenCypherFactory
 * @model kind="package"
 * @generated
 */
public interface OpenCypherPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "openCypher";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.codekontor.io/opencypher/xtext/OpenCypher";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "openCypher";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  OpenCypherPackage eINSTANCE = io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl.init();

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CypherImpl <em>Cypher</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CypherImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCypher()
   * @generated
   */
  int CYPHER = 0;

  /**
   * The feature id for the '<em><b>Query Options</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER__QUERY_OPTIONS = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER__STATEMENTS = 1;

  /**
   * The number of structural features of the '<em>Cypher</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.QueryOptionsImpl <em>Query Options</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.QueryOptionsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getQueryOptions()
   * @generated
   */
  int QUERY_OPTIONS = 1;

  /**
   * The number of structural features of the '<em>Query Options</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_OPTIONS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CypherOptionImpl <em>Cypher Option</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CypherOptionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCypherOption()
   * @generated
   */
  int CYPHER_OPTION = 2;

  /**
   * The feature id for the '<em><b>Version Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER_OPTION__VERSION_NUMBER = 0;

  /**
   * The feature id for the '<em><b>Configuration Option</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER_OPTION__CONFIGURATION_OPTION = 1;

  /**
   * The number of structural features of the '<em>Cypher Option</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CYPHER_OPTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VersionNumberImpl <em>Version Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.VersionNumberImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVersionNumber()
   * @generated
   */
  int VERSION_NUMBER = 3;

  /**
   * The feature id for the '<em><b>Version Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERSION_NUMBER__VERSION_NUMBER = 0;

  /**
   * The number of structural features of the '<em>Version Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VERSION_NUMBER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ConfigurationOptionImpl <em>Configuration Option</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ConfigurationOptionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getConfigurationOption()
   * @generated
   */
  int CONFIGURATION_OPTION = 4;

  /**
   * The feature id for the '<em><b>Key</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFIGURATION_OPTION__KEY = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFIGURATION_OPTION__VALUE = 1;

  /**
   * The number of structural features of the '<em>Configuration Option</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONFIGURATION_OPTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StatementImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 5;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.QueryImpl <em>Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.QueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getQuery()
   * @generated
   */
  int QUERY = 6;

  /**
   * The number of structural features of the '<em>Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int QUERY_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RegularQueryImpl <em>Regular Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RegularQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRegularQuery()
   * @generated
   */
  int REGULAR_QUERY = 7;

  /**
   * The number of structural features of the '<em>Regular Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_QUERY_FEATURE_COUNT = QUERY_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.BulkImportQueryImpl <em>Bulk Import Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.BulkImportQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getBulkImportQuery()
   * @generated
   */
  int BULK_IMPORT_QUERY = 8;

  /**
   * The feature id for the '<em><b>Periodic Commit Hint</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BULK_IMPORT_QUERY__PERIODIC_COMMIT_HINT = QUERY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Load CSV Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BULK_IMPORT_QUERY__LOAD_CSV_QUERY = QUERY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Bulk Import Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BULK_IMPORT_QUERY_FEATURE_COUNT = QUERY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PeriodicCommitHintImpl <em>Periodic Commit Hint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PeriodicCommitHintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPeriodicCommitHint()
   * @generated
   */
  int PERIODIC_COMMIT_HINT = 9;

  /**
   * The feature id for the '<em><b>Number Of Rows Per Commit</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERIODIC_COMMIT_HINT__NUMBER_OF_ROWS_PER_COMMIT = 0;

  /**
   * The number of structural features of the '<em>Periodic Commit Hint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PERIODIC_COMMIT_HINT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVQueryImpl <em>Load CSV Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLoadCSVQuery()
   * @generated
   */
  int LOAD_CSV_QUERY = 10;

  /**
   * The feature id for the '<em><b>Load CSV</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV_QUERY__LOAD_CSV = 0;

  /**
   * The feature id for the '<em><b>Single Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV_QUERY__SINGLE_QUERY = 1;

  /**
   * The number of structural features of the '<em>Load CSV Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV_QUERY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnionImpl <em>Union</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.UnionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnion()
   * @generated
   */
  int UNION = 11;

  /**
   * The feature id for the '<em><b>All</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION__ALL = 0;

  /**
   * The feature id for the '<em><b>Single Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION__SINGLE_QUERY = 1;

  /**
   * The number of structural features of the '<em>Union</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SingleQueryImpl <em>Single Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SingleQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSingleQuery()
   * @generated
   */
  int SINGLE_QUERY = 12;

  /**
   * The number of structural features of the '<em>Single Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_QUERY_FEATURE_COUNT = REGULAR_QUERY_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SinglePartQueryImpl <em>Single Part Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SinglePartQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSinglePartQuery()
   * @generated
   */
  int SINGLE_PART_QUERY = 13;

  /**
   * The feature id for the '<em><b>Reading Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PART_QUERY__READING_CLAUSES = SINGLE_QUERY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Return</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PART_QUERY__RETURN = SINGLE_QUERY_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Updating Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PART_QUERY__UPDATING_CLAUSES = SINGLE_QUERY_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Single Part Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_PART_QUERY_FEATURE_COUNT = SINGLE_QUERY_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiPartQueryImpl <em>Multi Part Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiPartQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiPartQuery()
   * @generated
   */
  int MULTI_PART_QUERY = 14;

  /**
   * The feature id for the '<em><b>Sub Queries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_QUERY__SUB_QUERIES = SINGLE_QUERY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Single Part Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_QUERY__SINGLE_PART_QUERY = SINGLE_QUERY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Multi Part Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_QUERY_FEATURE_COUNT = SINGLE_QUERY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiPartSubQueryImpl <em>Multi Part Sub Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiPartSubQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiPartSubQuery()
   * @generated
   */
  int MULTI_PART_SUB_QUERY = 15;

  /**
   * The feature id for the '<em><b>Reading Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_SUB_QUERY__READING_CLAUSES = 0;

  /**
   * The feature id for the '<em><b>Updating Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_SUB_QUERY__UPDATING_CLAUSES = 1;

  /**
   * The feature id for the '<em><b>With Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_SUB_QUERY__WITH_PART = 2;

  /**
   * The number of structural features of the '<em>Multi Part Sub Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTI_PART_SUB_QUERY_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ClauseImpl <em>Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ClauseImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getClause()
   * @generated
   */
  int CLAUSE = 16;

  /**
   * The number of structural features of the '<em>Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLAUSE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UpdatingClauseImpl <em>Updating Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.UpdatingClauseImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUpdatingClause()
   * @generated
   */
  int UPDATING_CLAUSE = 17;

  /**
   * The number of structural features of the '<em>Updating Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATING_CLAUSE_FEATURE_COUNT = CLAUSE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReadingClauseImpl <em>Reading Clause</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReadingClauseImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReadingClause()
   * @generated
   */
  int READING_CLAUSE = 18;

  /**
   * The number of structural features of the '<em>Reading Clause</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READING_CLAUSE_FEATURE_COUNT = CLAUSE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CommandImpl <em>Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CommandImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCommand()
   * @generated
   */
  int COMMAND = 19;

  /**
   * The number of structural features of the '<em>Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateUniqueConstraintImpl <em>Create Unique Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateUniqueConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateUniqueConstraint()
   * @generated
   */
  int CREATE_UNIQUE_CONSTRAINT = 20;

  /**
   * The number of structural features of the '<em>Create Unique Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_UNIQUE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateNodePropertyExistenceConstraintImpl <em>Create Node Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateNodePropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateNodePropertyExistenceConstraint()
   * @generated
   */
  int CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT = 21;

  /**
   * The number of structural features of the '<em>Create Node Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateRelationshipPropertyExistenceConstraintImpl <em>Create Relationship Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateRelationshipPropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateRelationshipPropertyExistenceConstraint()
   * @generated
   */
  int CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = 22;

  /**
   * The number of structural features of the '<em>Create Relationship Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateIndexImpl <em>Create Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateIndexImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateIndex()
   * @generated
   */
  int CREATE_INDEX = 23;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_INDEX__INDEX = COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Create Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_INDEX_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropUniqueConstraintImpl <em>Drop Unique Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DropUniqueConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropUniqueConstraint()
   * @generated
   */
  int DROP_UNIQUE_CONSTRAINT = 24;

  /**
   * The feature id for the '<em><b>Unique Constraint</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_UNIQUE_CONSTRAINT__UNIQUE_CONSTRAINT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Drop Unique Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_UNIQUE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropNodePropertyExistenceConstraintImpl <em>Drop Node Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DropNodePropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropNodePropertyExistenceConstraint()
   * @generated
   */
  int DROP_NODE_PROPERTY_EXISTENCE_CONSTRAINT = 25;

  /**
   * The feature id for the '<em><b>Node Property Existence Constraint</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_NODE_PROPERTY_EXISTENCE_CONSTRAINT__NODE_PROPERTY_EXISTENCE_CONSTRAINT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Drop Node Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropRelationshipPropertyExistenceConstraintImpl <em>Drop Relationship Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DropRelationshipPropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropRelationshipPropertyExistenceConstraint()
   * @generated
   */
  int DROP_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = 26;

  /**
   * The feature id for the '<em><b>Relationship Property Existence Constraint</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Drop Relationship Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropIndexImpl <em>Drop Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DropIndexImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropIndex()
   * @generated
   */
  int DROP_INDEX = 27;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_INDEX__INDEX = COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Drop Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DROP_INDEX_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexImpl <em>Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndex()
   * @generated
   */
  int INDEX = 28;

  /**
   * The feature id for the '<em><b>Node Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX__NODE_LABEL = 0;

  /**
   * The feature id for the '<em><b>Property Key Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX__PROPERTY_KEY_NAME = 1;

  /**
   * The number of structural features of the '<em>Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UniqueConstraintImpl <em>Unique Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.UniqueConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUniqueConstraint()
   * @generated
   */
  int UNIQUE_CONSTRAINT = 29;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIQUE_CONSTRAINT__VARIABLE = CREATE_UNIQUE_CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Node Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIQUE_CONSTRAINT__NODE_LABEL = CREATE_UNIQUE_CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Property Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIQUE_CONSTRAINT__PROPERTY_EXPRESSION = CREATE_UNIQUE_CONSTRAINT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Unique Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIQUE_CONSTRAINT_FEATURE_COUNT = CREATE_UNIQUE_CONSTRAINT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodePropertyExistenceConstraintImpl <em>Node Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodePropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodePropertyExistenceConstraint()
   * @generated
   */
  int NODE_PROPERTY_EXISTENCE_CONSTRAINT = 30;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PROPERTY_EXISTENCE_CONSTRAINT__VARIABLE = CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Node Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PROPERTY_EXISTENCE_CONSTRAINT__NODE_LABEL = CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Property Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PROPERTY_EXISTENCE_CONSTRAINT__PROPERTY_EXPRESSION = CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Node Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPropertyExistenceConstraintImpl <em>Relationship Property Existence Constraint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPropertyExistenceConstraintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPropertyExistenceConstraint()
   * @generated
   */
  int RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = 31;

  /**
   * The feature id for the '<em><b>Relationship Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__RELATIONSHIP_PATTERN = CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__PROPERTY_EXPRESSION = CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Relationship Property Existence Constraint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT = CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternSyntaxImpl <em>Relationship Pattern Syntax</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternSyntaxImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPatternSyntax()
   * @generated
   */
  int RELATIONSHIP_PATTERN_SYNTAX = 32;

  /**
   * The feature id for the '<em><b>Incoming</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_SYNTAX__INCOMING = 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_SYNTAX__VARIABLE = 1;

  /**
   * The feature id for the '<em><b>Rel Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_SYNTAX__REL_TYPE = 2;

  /**
   * The feature id for the '<em><b>Outgoing</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_SYNTAX__OUTGOING = 3;

  /**
   * The number of structural features of the '<em>Relationship Pattern Syntax</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_SYNTAX_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVImpl <em>Load CSV</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLoadCSV()
   * @generated
   */
  int LOAD_CSV = 33;

  /**
   * The feature id for the '<em><b>With Headers</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV__WITH_HEADERS = READING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV__EXPRESSION = READING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV__VARIABLE = READING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Fieldterminator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV__FIELDTERMINATOR = READING_CLAUSE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Load CSV</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_CSV_FEATURE_COUNT = READING_CLAUSE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MatchImpl <em>Match</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MatchImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMatch()
   * @generated
   */
  int MATCH = 34;

  /**
   * The feature id for the '<em><b>Optional</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH__OPTIONAL = READING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH__PATTERN = READING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Hints</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH__HINTS = READING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Where</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH__WHERE = READING_CLAUSE_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Match</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_FEATURE_COUNT = READING_CLAUSE_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnwindImpl <em>Unwind</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.UnwindImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnwind()
   * @generated
   */
  int UNWIND = 35;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNWIND__EXPRESSION = READING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNWIND__VARIABLE = READING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unwind</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNWIND_FEATURE_COUNT = READING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MergeImpl <em>Merge</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MergeImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMerge()
   * @generated
   */
  int MERGE = 36;

  /**
   * The feature id for the '<em><b>Pattern Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE__PATTERN_PART = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Merge Actions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE__MERGE_ACTIONS = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Merge</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MergeActionImpl <em>Merge Action</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MergeActionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMergeAction()
   * @generated
   */
  int MERGE_ACTION = 37;

  /**
   * The feature id for the '<em><b>Action</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_ACTION__ACTION = 0;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_ACTION__SET = 1;

  /**
   * The number of structural features of the '<em>Merge Action</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_ACTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateImpl <em>Create</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreate()
   * @generated
   */
  int CREATE = 38;

  /**
   * The feature id for the '<em><b>Unique Contraint</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE__UNIQUE_CONTRAINT = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE__PATTERN = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Create</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SetImpl <em>Set</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SetImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSet()
   * @generated
   */
  int SET = 39;

  /**
   * The feature id for the '<em><b>Set Items</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__SET_ITEMS = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsImpl <em>Node Labels</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabels()
   * @generated
   */
  int NODE_LABELS = 80;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS__NODE_LABELS = 0;

  /**
   * The number of structural features of the '<em>Node Labels</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SetItemImpl <em>Set Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SetItemImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSetItem()
   * @generated
   */
  int SET_ITEM = 40;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ITEM__NODE_LABELS = NODE_LABELS__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ITEM__PROPERTY_EXPRESSION = NODE_LABELS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ITEM__EXPRESSION = NODE_LABELS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ITEM__VARIABLE = NODE_LABELS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Set Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ITEM_FEATURE_COUNT = NODE_LABELS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DeleteImpl <em>Delete</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DeleteImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDelete()
   * @generated
   */
  int DELETE = 41;

  /**
   * The feature id for the '<em><b>Detach</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE__DETACH = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE__EXPRESSIONS = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Delete</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveImpl <em>Remove</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemove()
   * @generated
   */
  int REMOVE = 42;

  /**
   * The feature id for the '<em><b>Remove Items</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE__REMOVE_ITEMS = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Remove</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemImpl <em>Remove Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItem()
   * @generated
   */
  int REMOVE_ITEM = 43;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM__NODE_LABELS = NODE_LABELS__NODE_LABELS;

  /**
   * The number of structural features of the '<em>Remove Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_FEATURE_COUNT = NODE_LABELS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ForeachImpl <em>Foreach</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ForeachImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getForeach()
   * @generated
   */
  int FOREACH = 44;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__VARIABLE = UPDATING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__EXPRESSION = UPDATING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Updating Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH__UPDATING_CLAUSES = UPDATING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Foreach</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOREACH_FEATURE_COUNT = UPDATING_CLAUSE_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.InQueryCallImpl <em>In Query Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.InQueryCallImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getInQueryCall()
   * @generated
   */
  int IN_QUERY_CALL = 45;

  /**
   * The feature id for the '<em><b>Invocation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_QUERY_CALL__INVOCATION = READING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Yield Items</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_QUERY_CALL__YIELD_ITEMS = READING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>In Query Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_QUERY_CALL_FEATURE_COUNT = READING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StandaloneCallImpl <em>Standalone Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StandaloneCallImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStandaloneCall()
   * @generated
   */
  int STANDALONE_CALL = 46;

  /**
   * The feature id for the '<em><b>Invocation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STANDALONE_CALL__INVOCATION = QUERY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Yield Items</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STANDALONE_CALL__YIELD_ITEMS = QUERY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Standalone Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STANDALONE_CALL_FEATURE_COUNT = QUERY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.YieldItemsImpl <em>Yield Items</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.YieldItemsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getYieldItems()
   * @generated
   */
  int YIELD_ITEMS = 47;

  /**
   * The feature id for the '<em><b>Items</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int YIELD_ITEMS__ITEMS = 0;

  /**
   * The number of structural features of the '<em>Yield Items</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int YIELD_ITEMS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.YieldItemImpl <em>Yield Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.YieldItemImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getYieldItem()
   * @generated
   */
  int YIELD_ITEM = 48;

  /**
   * The feature id for the '<em><b>Field</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int YIELD_ITEM__FIELD = 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int YIELD_ITEM__VARIABLE = 1;

  /**
   * The number of structural features of the '<em>Yield Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int YIELD_ITEM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.WithImpl <em>With</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.WithImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getWith()
   * @generated
   */
  int WITH = 49;

  /**
   * The feature id for the '<em><b>Return Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH__RETURN_BODY = CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Where</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH__WHERE = CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>With</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_FEATURE_COUNT = CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnImpl <em>Return</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturn()
   * @generated
   */
  int RETURN = 50;

  /**
   * The feature id for the '<em><b>Return</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN__RETURN = CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN__BODY = CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Return</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_FEATURE_COUNT = CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnBodyImpl <em>Return Body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnBodyImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnBody()
   * @generated
   */
  int RETURN_BODY = 51;

  /**
   * The feature id for the '<em><b>Distinct</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY__DISTINCT = 0;

  /**
   * The feature id for the '<em><b>Return Items</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY__RETURN_ITEMS = 1;

  /**
   * The feature id for the '<em><b>Order</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY__ORDER = 2;

  /**
   * The feature id for the '<em><b>Skip</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY__SKIP = 3;

  /**
   * The feature id for the '<em><b>Limit</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY__LIMIT = 4;

  /**
   * The number of structural features of the '<em>Return Body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_BODY_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemsImpl <em>Return Items</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnItems()
   * @generated
   */
  int RETURN_ITEMS = 52;

  /**
   * The feature id for the '<em><b>All</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEMS__ALL = 0;

  /**
   * The feature id for the '<em><b>Items</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEMS__ITEMS = 1;

  /**
   * The number of structural features of the '<em>Return Items</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEMS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemImpl <em>Return Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnItem()
   * @generated
   */
  int RETURN_ITEM = 53;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEM__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Alias</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEM__ALIAS = 1;

  /**
   * The number of structural features of the '<em>Return Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_ITEM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.OrderImpl <em>Order</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OrderImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getOrder()
   * @generated
   */
  int ORDER = 54;

  /**
   * The feature id for the '<em><b>Order By</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER__ORDER_BY = 0;

  /**
   * The number of structural features of the '<em>Order</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ORDER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SkipImpl <em>Skip</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SkipImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSkip()
   * @generated
   */
  int SKIP = 55;

  /**
   * The feature id for the '<em><b>Skip</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SKIP__SKIP = 0;

  /**
   * The number of structural features of the '<em>Skip</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SKIP_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LimitImpl <em>Limit</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LimitImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLimit()
   * @generated
   */
  int LIMIT = 56;

  /**
   * The feature id for the '<em><b>Limit</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIMIT__LIMIT = 0;

  /**
   * The number of structural features of the '<em>Limit</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIMIT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SortItemImpl <em>Sort Item</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SortItemImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSortItem()
   * @generated
   */
  int SORT_ITEM = 57;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_ITEM__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Sort</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_ITEM__SORT = 1;

  /**
   * The number of structural features of the '<em>Sort Item</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_ITEM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.HintImpl <em>Hint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.HintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getHint()
   * @generated
   */
  int HINT = 58;

  /**
   * The number of structural features of the '<em>Hint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HINT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartImpl <em>Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StartImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStart()
   * @generated
   */
  int START = 59;

  /**
   * The feature id for the '<em><b>Start Point</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START__START_POINT = READING_CLAUSE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Where</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START__WHERE = READING_CLAUSE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_FEATURE_COUNT = READING_CLAUSE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartPointImpl <em>Start Point</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StartPointImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStartPoint()
   * @generated
   */
  int START_POINT = 60;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_POINT__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Lookup</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_POINT__LOOKUP = 1;

  /**
   * The number of structural features of the '<em>Start Point</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_POINT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LookupImpl <em>Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLookup()
   * @generated
   */
  int LOOKUP = 61;

  /**
   * The number of structural features of the '<em>Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOKUP_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLookupImpl <em>Node Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLookup()
   * @generated
   */
  int NODE_LOOKUP = 62;

  /**
   * The number of structural features of the '<em>Node Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LOOKUP_FEATURE_COUNT = LOOKUP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipLookupImpl <em>Relationship Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipLookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipLookup()
   * @generated
   */
  int RELATIONSHIP_LOOKUP = 63;

  /**
   * The number of structural features of the '<em>Relationship Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_LOOKUP_FEATURE_COUNT = LOOKUP_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdentifiedIndexLookupImpl <em>Identified Index Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IdentifiedIndexLookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdentifiedIndexLookup()
   * @generated
   */
  int IDENTIFIED_INDEX_LOOKUP = 64;

  /**
   * The feature id for the '<em><b>Index Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIED_INDEX_LOOKUP__INDEX_NAME = NODE_LOOKUP_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Key</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIED_INDEX_LOOKUP__KEY = NODE_LOOKUP_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIED_INDEX_LOOKUP__VALUE = NODE_LOOKUP_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Legacy Parameter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIED_INDEX_LOOKUP__LEGACY_PARAMETER = NODE_LOOKUP_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Identified Index Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIED_INDEX_LOOKUP_FEATURE_COUNT = NODE_LOOKUP_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexQueryImpl <em>Index Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexQuery()
   * @generated
   */
  int INDEX_QUERY = 65;

  /**
   * The feature id for the '<em><b>Index Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_QUERY__INDEX_NAME = NODE_LOOKUP_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Query</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_QUERY__QUERY = NODE_LOOKUP_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_QUERY__PARAMETER = NODE_LOOKUP_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Index Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_QUERY_FEATURE_COUNT = NODE_LOOKUP_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdLookupImpl <em>Id Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IdLookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdLookup()
   * @generated
   */
  int ID_LOOKUP = 66;

  /**
   * The feature id for the '<em><b>Ids</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_LOOKUP__IDS = NODE_LOOKUP_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Legacy Parameter</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_LOOKUP__LEGACY_PARAMETER = NODE_LOOKUP_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Wildcard</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_LOOKUP__WILDCARD = NODE_LOOKUP_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Id Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_LOOKUP_FEATURE_COUNT = NODE_LOOKUP_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LiteralIdsImpl <em>Literal Ids</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LiteralIdsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLiteralIds()
   * @generated
   */
  int LITERAL_IDS = 67;

  /**
   * The feature id for the '<em><b>Ids</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_IDS__IDS = 0;

  /**
   * The number of structural features of the '<em>Literal Ids</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_IDS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.WhereImpl <em>Where</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.WhereImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getWhere()
   * @generated
   */
  int WHERE = 68;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHERE__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Where</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHERE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternImpl <em>Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPattern()
   * @generated
   */
  int PATTERN = 69;

  /**
   * The feature id for the '<em><b>Patterns</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN__PATTERNS = 0;

  /**
   * The number of structural features of the '<em>Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternPartImpl <em>Pattern Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternPartImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternPart()
   * @generated
   */
  int PATTERN_PART = 70;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_PART__VAR = 0;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_PART__PART = 1;

  /**
   * The number of structural features of the '<em>Pattern Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_PART_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AnonymousPatternPartImpl <em>Anonymous Pattern Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AnonymousPatternPartImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAnonymousPatternPart()
   * @generated
   */
  int ANONYMOUS_PATTERN_PART = 71;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANONYMOUS_PATTERN_PART__VAR = PATTERN_PART__VAR;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANONYMOUS_PATTERN_PART__PART = PATTERN_PART__PART;

  /**
   * The number of structural features of the '<em>Anonymous Pattern Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANONYMOUS_PATTERN_PART_FEATURE_COUNT = PATTERN_PART_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathPatternImpl <em>Shortest Path Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathPatternImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getShortestPathPattern()
   * @generated
   */
  int SHORTEST_PATH_PATTERN = 72;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN__VAR = ANONYMOUS_PATTERN_PART__VAR;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN__PART = ANONYMOUS_PATTERN_PART__PART;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN__NODE_LABELS = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN__PROPERTY_LOOKUPS = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Pattern Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN__PATTERN_ELEMENT = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Shortest Path Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_PATTERN_FEATURE_COUNT = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternElementImpl <em>Pattern Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternElementImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternElement()
   * @generated
   */
  int PATTERN_ELEMENT = 73;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT__VAR = ANONYMOUS_PATTERN_PART__VAR;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT__PART = ANONYMOUS_PATTERN_PART__PART;

  /**
   * The feature id for the '<em><b>Nodepattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT__NODEPATTERN = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Chain</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT__CHAIN = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Pattern Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT_FEATURE_COUNT = ANONYMOUS_PATTERN_PART_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodePatternImpl <em>Node Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodePatternImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodePattern()
   * @generated
   */
  int NODE_PATTERN = 74;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PATTERN__NODE_LABELS = NODE_LABELS__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PATTERN__VARIABLE = NODE_LABELS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Properties</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PATTERN__PROPERTIES = NODE_LABELS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Node Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PATTERN_FEATURE_COUNT = NODE_LABELS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternElementChainImpl <em>Pattern Element Chain</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternElementChainImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternElementChain()
   * @generated
   */
  int PATTERN_ELEMENT_CHAIN = 75;

  /**
   * The feature id for the '<em><b>Relationship Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT_CHAIN__RELATIONSHIP_PATTERN = 0;

  /**
   * The feature id for the '<em><b>Node Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT_CHAIN__NODE_PATTERN = 1;

  /**
   * The number of structural features of the '<em>Pattern Element Chain</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_ELEMENT_CHAIN_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternImpl <em>Relationship Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPattern()
   * @generated
   */
  int RELATIONSHIP_PATTERN = 76;

  /**
   * The feature id for the '<em><b>Incoming</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN__INCOMING = 0;

  /**
   * The feature id for the '<em><b>Detail</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN__DETAIL = 1;

  /**
   * The feature id for the '<em><b>Outgoing</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN__OUTGOING = 2;

  /**
   * The number of structural features of the '<em>Relationship Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_PATTERN_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipTypesImpl <em>Relationship Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipTypesImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipTypes()
   * @generated
   */
  int RELATIONSHIP_TYPES = 79;

  /**
   * The feature id for the '<em><b>Rel Type Names</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_TYPES__REL_TYPE_NAMES = 0;

  /**
   * The number of structural features of the '<em>Relationship Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_TYPES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipDetailImpl <em>Relationship Detail</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipDetailImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipDetail()
   * @generated
   */
  int RELATIONSHIP_DETAIL = 77;

  /**
   * The feature id for the '<em><b>Rel Type Names</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL__REL_TYPE_NAMES = RELATIONSHIP_TYPES__REL_TYPE_NAMES;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL__VARIABLE = RELATIONSHIP_TYPES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Optional</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL__OPTIONAL = RELATIONSHIP_TYPES_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Range</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL__RANGE = RELATIONSHIP_TYPES_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Properties</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL__PROPERTIES = RELATIONSHIP_TYPES_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Relationship Detail</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIP_DETAIL_FEATURE_COUNT = RELATIONSHIP_TYPES_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertiesImpl <em>Properties</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertiesImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getProperties()
   * @generated
   */
  int PROPERTIES = 78;

  /**
   * The number of structural features of the '<em>Properties</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTIES_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelImpl <em>Node Label</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabel()
   * @generated
   */
  int NODE_LABEL = 81;

  /**
   * The feature id for the '<em><b>Label Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABEL__LABEL_NAME = 0;

  /**
   * The number of structural features of the '<em>Node Label</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RangeLiteralImpl <em>Range Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RangeLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRangeLiteral()
   * @generated
   */
  int RANGE_LITERAL = 82;

  /**
   * The feature id for the '<em><b>Lower</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL__LOWER = 0;

  /**
   * The feature id for the '<em><b>Variable Length</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL__VARIABLE_LENGTH = 1;

  /**
   * The feature id for the '<em><b>Upper</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL__UPPER = 2;

  /**
   * The number of structural features of the '<em>Range Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 83;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__NODE_LABELS = NODE_LABELS__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__PROPERTY_LOOKUPS = NODE_LABELS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = NODE_LABELS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LiteralImpl <em>Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLiteral()
   * @generated
   */
  int LITERAL = 84;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The number of structural features of the '<em>Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.BooleanLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getBooleanLiteral()
   * @generated
   */
  int BOOLEAN_LITERAL = 85;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__NODE_LABELS = LITERAL__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__PROPERTY_LOOKUPS = LITERAL__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ListLiteralImpl <em>List Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ListLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getListLiteral()
   * @generated
   */
  int LIST_LITERAL = 86;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LITERAL__NODE_LABELS = LITERAL__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LITERAL__PROPERTY_LOOKUPS = LITERAL__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LITERAL__EXPRESSIONS = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>List Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReduceImpl <em>Reduce</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ReduceImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReduce()
   * @generated
   */
  int REDUCE = 87;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Accumulator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__ACCUMULATOR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Accumulator Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__ACCUMULATOR_EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Id In Coll</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__ID_IN_COLL = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE__EXPRESSION = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Reduce</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REDUCE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ParenthesizedExpressionImpl <em>Parenthesized Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ParenthesizedExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getParenthesizedExpression()
   * @generated
   */
  int PARENTHESIZED_EXPRESSION = 88;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Parenthesized Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipsPatternImpl <em>Relationships Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipsPatternImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipsPattern()
   * @generated
   */
  int RELATIONSHIPS_PATTERN = 89;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIPS_PATTERN__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIPS_PATTERN__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Node Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIPS_PATTERN__NODE_PATTERN = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Chain</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIPS_PATTERN__CHAIN = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Relationships Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RELATIONSHIPS_PATTERN_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FilterExpressionImpl <em>Filter Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.FilterExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFilterExpression()
   * @generated
   */
  int FILTER_EXPRESSION = 90;

  /**
   * The feature id for the '<em><b>Id In Coll</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPRESSION__ID_IN_COLL = 0;

  /**
   * The feature id for the '<em><b>Where</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPRESSION__WHERE = 1;

  /**
   * The number of structural features of the '<em>Filter Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdInCollImpl <em>Id In Coll</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IdInCollImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdInColl()
   * @generated
   */
  int ID_IN_COLL = 91;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_IN_COLL__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_IN_COLL__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Id In Coll</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ID_IN_COLL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FunctionInvocationImpl <em>Function Invocation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.FunctionInvocationImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFunctionInvocation()
   * @generated
   */
  int FUNCTION_INVOCATION = 92;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__FUNCTION_NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Distinct</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__DISTINCT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION__PARAMETER = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Function Invocation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INVOCATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExplicitProcedureInvocationImpl <em>Explicit Procedure Invocation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ExplicitProcedureInvocationImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExplicitProcedureInvocation()
   * @generated
   */
  int EXPLICIT_PROCEDURE_INVOCATION = 93;

  /**
   * The feature id for the '<em><b>Procedure Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_PROCEDURE_INVOCATION__PROCEDURE_NAME = 0;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_PROCEDURE_INVOCATION__PARAMETER = 1;

  /**
   * The number of structural features of the '<em>Explicit Procedure Invocation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLICIT_PROCEDURE_INVOCATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ImplicitProcedureInvocationImpl <em>Implicit Procedure Invocation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ImplicitProcedureInvocationImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getImplicitProcedureInvocation()
   * @generated
   */
  int IMPLICIT_PROCEDURE_INVOCATION = 94;

  /**
   * The feature id for the '<em><b>Procedure Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLICIT_PROCEDURE_INVOCATION__PROCEDURE_NAME = 0;

  /**
   * The number of structural features of the '<em>Implicit Procedure Invocation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLICIT_PROCEDURE_INVOCATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ProcedureNameImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getProcedureName()
   * @generated
   */
  int PROCEDURE_NAME = 95;

  /**
   * The feature id for the '<em><b>Namespace</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME__NAMESPACE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME__NAME = 1;

  /**
   * The number of structural features of the '<em>Procedure Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ListComprehensionImpl <em>List Comprehension</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ListComprehensionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getListComprehension()
   * @generated
   */
  int LIST_COMPREHENSION = 96;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_COMPREHENSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_COMPREHENSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_COMPREHENSION__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_COMPREHENSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>List Comprehension</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIST_COMPREHENSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternComprehensionImpl <em>Pattern Comprehension</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternComprehensionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternComprehension()
   * @generated
   */
  int PATTERN_COMPREHENSION = 97;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Path Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__PATH_VARIABLE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__PATTERN = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Where</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__WHERE = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Pattern Comprehension</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_COMPREHENSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupImpl <em>Property Lookup</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyLookup()
   * @generated
   */
  int PROPERTY_LOOKUP = 98;

  /**
   * The feature id for the '<em><b>Property Key Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP__PROPERTY_KEY_NAME = 0;

  /**
   * The feature id for the '<em><b>Property Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP__PROPERTY_OPERATOR = 1;

  /**
   * The number of structural features of the '<em>Property Lookup</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CaseExpressionImpl <em>Case Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CaseExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCaseExpression()
   * @generated
   */
  int CASE_EXPRESSION = 99;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Case Alternatives</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION__CASE_ALTERNATIVES = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Case Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION__CASE_EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION__ELSE_EXPRESSION = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Case Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CaseAlternativesImpl <em>Case Alternatives</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CaseAlternativesImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCaseAlternatives()
   * @generated
   */
  int CASE_ALTERNATIVES = 100;

  /**
   * The feature id for the '<em><b>When</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_ALTERNATIVES__WHEN = 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_ALTERNATIVES__THEN = 1;

  /**
   * The number of structural features of the '<em>Case Alternatives</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_ALTERNATIVES_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.VariableDeclarationImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 101;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__NAME = 0;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StringLiteralImpl <em>String Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StringLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStringLiteral()
   * @generated
   */
  int STRING_LITERAL = 102;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__NODE_LABELS = LITERAL__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__PROPERTY_LOOKUPS = LITERAL__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NumberLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNumberLiteral()
   * @generated
   */
  int NUMBER_LITERAL = 103;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__NODE_LABELS = LITERAL__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__PROPERTY_LOOKUPS = LITERAL__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__VALUE = LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralImpl <em>Map Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMapLiteral()
   * @generated
   */
  int MAP_LITERAL = 104;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL__NODE_LABELS = PROPERTIES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL__PROPERTY_LOOKUPS = PROPERTIES_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Entries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL__ENTRIES = PROPERTIES_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Map Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_FEATURE_COUNT = PROPERTIES_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralEntryImpl <em>Map Literal Entry</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralEntryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMapLiteralEntry()
   * @generated
   */
  int MAP_LITERAL_ENTRY = 105;

  /**
   * The feature id for the '<em><b>Key</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_ENTRY__KEY = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_ENTRY__VALUE = 1;

  /**
   * The number of structural features of the '<em>Map Literal Entry</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_ENTRY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LegacyParameterImpl <em>Legacy Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.LegacyParameterImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLegacyParameter()
   * @generated
   */
  int LEGACY_PARAMETER = 106;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEGACY_PARAMETER__NODE_LABELS = PROPERTIES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEGACY_PARAMETER__PROPERTY_LOOKUPS = PROPERTIES_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEGACY_PARAMETER__PARAMETER = PROPERTIES_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Legacy Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEGACY_PARAMETER_FEATURE_COUNT = PROPERTIES_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ParameterImpl <em>Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ParameterImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getParameter()
   * @generated
   */
  int PARAMETER = 107;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__NODE_LABELS = PROPERTIES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__PROPERTY_LOOKUPS = PROPERTIES_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Parameter</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__PARAMETER = PROPERTIES_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_FEATURE_COUNT = PROPERTIES_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyExpressionImpl <em>Property Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyExpression()
   * @generated
   */
  int PROPERTY_EXPRESSION = 108;

  /**
   * The number of structural features of the '<em>Property Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DecimalIntegerImpl <em>Decimal Integer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.DecimalIntegerImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDecimalInteger()
   * @generated
   */
  int DECIMAL_INTEGER = 109;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_INTEGER__VALUE = 0;

  /**
   * The number of structural features of the '<em>Decimal Integer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECIMAL_INTEGER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllOptionsImpl <em>All Options</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AllOptionsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAllOptions()
   * @generated
   */
  int ALL_OPTIONS = 110;

  /**
   * The feature id for the '<em><b>Explain</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_OPTIONS__EXPLAIN = QUERY_OPTIONS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Profile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_OPTIONS__PROFILE = QUERY_OPTIONS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Cypher Option</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_OPTIONS__CYPHER_OPTION = QUERY_OPTIONS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>All Options</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_OPTIONS_FEATURE_COUNT = QUERY_OPTIONS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CombinedQueryImpl <em>Combined Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CombinedQueryImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCombinedQuery()
   * @generated
   */
  int COMBINED_QUERY = 111;

  /**
   * The feature id for the '<em><b>Single Query</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMBINED_QUERY__SINGLE_QUERY = REGULAR_QUERY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Union</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMBINED_QUERY__UNION = REGULAR_QUERY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Combined Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMBINED_QUERY_FEATURE_COUNT = REGULAR_QUERY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemLabelImpl <em>Remove Item Label</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemLabelImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItemLabel()
   * @generated
   */
  int REMOVE_ITEM_LABEL = 112;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_LABEL__NODE_LABELS = REMOVE_ITEM__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_LABEL__VARIABLE = REMOVE_ITEM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Remove Item Label</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_LABEL_FEATURE_COUNT = REMOVE_ITEM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemPropertyImpl <em>Remove Item Property</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemPropertyImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItemProperty()
   * @generated
   */
  int REMOVE_ITEM_PROPERTY = 113;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_PROPERTY__NODE_LABELS = REMOVE_ITEM__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_PROPERTY__PROPERTY_EXPRESSION = REMOVE_ITEM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Remove Item Property</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REMOVE_ITEM_PROPERTY_FEATURE_COUNT = REMOVE_ITEM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexHintImpl <em>Index Hint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexHintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexHint()
   * @generated
   */
  int INDEX_HINT = 114;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_HINT__VARIABLE = HINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Node Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_HINT__NODE_LABEL = HINT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Property Key Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_HINT__PROPERTY_KEY_NAME = HINT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Index Hint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_HINT_FEATURE_COUNT = HINT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.JoinHintImpl <em>Join Hint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.JoinHintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getJoinHint()
   * @generated
   */
  int JOIN_HINT = 115;

  /**
   * The feature id for the '<em><b>Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int JOIN_HINT__VARIABLES = HINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Join Hint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int JOIN_HINT_FEATURE_COUNT = HINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ScanHintImpl <em>Scan Hint</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ScanHintImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getScanHint()
   * @generated
   */
  int SCAN_HINT = 116;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCAN_HINT__VARIABLE = HINT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Node Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCAN_HINT__NODE_LABEL = HINT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Scan Hint</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCAN_HINT_FEATURE_COUNT = HINT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathImpl <em>Shortest Path</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getShortestPath()
   * @generated
   */
  int SHORTEST_PATH = 117;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH__VAR = SHORTEST_PATH_PATTERN__VAR;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH__PART = SHORTEST_PATH_PATTERN__PART;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH__NODE_LABELS = SHORTEST_PATH_PATTERN__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH__PROPERTY_LOOKUPS = SHORTEST_PATH_PATTERN__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Pattern Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH__PATTERN_ELEMENT = SHORTEST_PATH_PATTERN__PATTERN_ELEMENT;

  /**
   * The number of structural features of the '<em>Shortest Path</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHORTEST_PATH_FEATURE_COUNT = SHORTEST_PATH_PATTERN_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllShortestPathsImpl <em>All Shortest Paths</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AllShortestPathsImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAllShortestPaths()
   * @generated
   */
  int ALL_SHORTEST_PATHS = 118;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS__VAR = SHORTEST_PATH_PATTERN__VAR;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS__PART = SHORTEST_PATH_PATTERN__PART;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS__NODE_LABELS = SHORTEST_PATH_PATTERN__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS__PROPERTY_LOOKUPS = SHORTEST_PATH_PATTERN__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Pattern Element</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS__PATTERN_ELEMENT = SHORTEST_PATH_PATTERN__PATTERN_ELEMENT;

  /**
   * The number of structural features of the '<em>All Shortest Paths</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_SHORTEST_PATHS_FEATURE_COUNT = SHORTEST_PATH_PATTERN_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.OrExpressionImpl <em>Or Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OrExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getOrExpression()
   * @generated
   */
  int OR_EXPRESSION = 119;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Or Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.XorExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getXorExpression()
   * @generated
   */
  int XOR_EXPRESSION = 120;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Xor Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AndExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 121;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NotExpressionImpl <em>Not Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NotExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNotExpression()
   * @generated
   */
  int NOT_EXPRESSION = 122;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Not Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ComparisonExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getComparisonExpression()
   * @generated
   */
  int COMPARISON_EXPRESSION = 123;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AddOrSubtractExpressionImpl <em>Add Or Subtract Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AddOrSubtractExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAddOrSubtractExpression()
   * @generated
   */
  int ADD_OR_SUBTRACT_EXPRESSION = 124;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Add Or Subtract Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_OR_SUBTRACT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiplyDivideModuloExpressionImpl <em>Multiply Divide Modulo Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiplyDivideModuloExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiplyDivideModuloExpression()
   * @generated
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION = 125;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Multiply Divide Modulo Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_DIVIDE_MODULO_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PowerOfExpressionImpl <em>Power Of Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PowerOfExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPowerOfExpression()
   * @generated
   */
  int POWER_OF_EXPRESSION = 126;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Power Of Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_OF_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnaryAddOrSubtractExpressionImpl <em>Unary Add Or Subtract Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.UnaryAddOrSubtractExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnaryAddOrSubtractExpression()
   * @generated
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION = 127;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unary Add Or Subtract Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_ADD_OR_SUBTRACT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StringListNullOperatorExpressionImpl <em>String List Null Operator Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StringListNullOperatorExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStringListNullOperatorExpression()
   * @generated
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION = 128;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>String List Null Operator Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LIST_NULL_OPERATOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexLookupExpressionImpl <em>Index Lookup Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexLookupExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexLookupExpression()
   * @generated
   */
  int INDEX_LOOKUP_EXPRESSION = 129;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_LOOKUP_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_LOOKUP_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_LOOKUP_EXPRESSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Index Lookup Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_LOOKUP_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexRangeExpressionImpl <em>Index Range Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexRangeExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexRangeExpression()
   * @generated
   */
  int INDEX_RANGE_EXPRESSION = 130;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_RANGE_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_RANGE_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Lower</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_RANGE_EXPRESSION__LOWER = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Upper</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_RANGE_EXPRESSION__UPPER = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Index Range Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_RANGE_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RegExpMatchingExpressionImpl <em>Reg Exp Matching Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.RegExpMatchingExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRegExpMatchingExpression()
   * @generated
   */
  int REG_EXP_MATCHING_EXPRESSION = 131;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Reg Exp Matching Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REG_EXP_MATCHING_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.InCollectionExpressionImpl <em>In Collection Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.InCollectionExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getInCollectionExpression()
   * @generated
   */
  int IN_COLLECTION_EXPRESSION = 132;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>In Collection Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IN_COLLECTION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartsWithExpressionImpl <em>Starts With Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.StartsWithExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStartsWithExpression()
   * @generated
   */
  int STARTS_WITH_EXPRESSION = 133;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Starts With Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STARTS_WITH_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.EndsWithExpressionImpl <em>Ends With Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.EndsWithExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getEndsWithExpression()
   * @generated
   */
  int ENDS_WITH_EXPRESSION = 134;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ends With Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENDS_WITH_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ContainsExpressionImpl <em>Contains Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ContainsExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getContainsExpression()
   * @generated
   */
  int CONTAINS_EXPRESSION = 135;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION__RIGHT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Contains Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTAINS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IsNullExpressionImpl <em>Is Null Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IsNullExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIsNullExpression()
   * @generated
   */
  int IS_NULL_EXPRESSION = 136;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The number of structural features of the '<em>Is Null Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NULL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IsNotNullExpressionImpl <em>Is Not Null Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.IsNotNullExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIsNotNullExpression()
   * @generated
   */
  int IS_NOT_NULL_EXPRESSION = 137;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The number of structural features of the '<em>Is Not Null Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_NOT_NULL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupExpressionImpl <em>Property Lookup Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyLookupExpression()
   * @generated
   */
  int PROPERTY_LOOKUP_EXPRESSION = 138;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Property Lookup Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LOOKUP_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsExpressionImpl <em>Node Labels Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsExpressionImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabelsExpression()
   * @generated
   */
  int NODE_LABELS_EXPRESSION = 139;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS_EXPRESSION__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS_EXPRESSION__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS_EXPRESSION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Node Labels Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_LABELS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CountImpl <em>Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.CountImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCount()
   * @generated
   */
  int COUNT = 140;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The number of structural features of the '<em>Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FilterImpl <em>Filter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.FilterImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFilter()
   * @generated
   */
  int FILTER = 141;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Filter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILTER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExtractImpl <em>Extract</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.ExtractImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExtract()
   * @generated
   */
  int EXTRACT = 142;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRACT__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRACT__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRACT__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRACT__EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Extract</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRACT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllImpl <em>All</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AllImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAll()
   * @generated
   */
  int ALL = 143;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>All</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AnyImpl <em>Any</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.AnyImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAny()
   * @generated
   */
  int ANY = 144;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Any</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NoneImpl <em>None</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NoneImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNone()
   * @generated
   */
  int NONE = 145;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NONE__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NONE__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NONE__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>None</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NONE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SingleImpl <em>Single</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.SingleImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSingle()
   * @generated
   */
  int SINGLE = 146;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Filter Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE__FILTER_EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Single</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VariableRefImpl <em>Variable Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.VariableRefImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVariableRef()
   * @generated
   */
  int VARIABLE_REF = 147;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__NODE_LABELS = EXPRESSION__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__PROPERTY_LOOKUPS = EXPRESSION__PROPERTY_LOOKUPS;

  /**
   * The feature id for the '<em><b>Variable Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF__VARIABLE_REF = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REF_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NULLImpl <em>NULL</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see io.codekontor.opencypher.xtext.openCypher.impl.NULLImpl
   * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNULL()
   * @generated
   */
  int NULL = 148;

  /**
   * The feature id for the '<em><b>Node Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL__NODE_LABELS = LITERAL__NODE_LABELS;

  /**
   * The feature id for the '<em><b>Property Lookups</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL__PROPERTY_LOOKUPS = LITERAL__PROPERTY_LOOKUPS;

  /**
   * The number of structural features of the '<em>NULL</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_FEATURE_COUNT = LITERAL_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Cypher <em>Cypher</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cypher</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Cypher
   * @generated
   */
  EClass getCypher();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Cypher#getQueryOptions <em>Query Options</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Query Options</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Cypher#getQueryOptions()
   * @see #getCypher()
   * @generated
   */
  EReference getCypher_QueryOptions();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Cypher#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Cypher#getStatements()
   * @see #getCypher()
   * @generated
   */
  EReference getCypher_Statements();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.QueryOptions <em>Query Options</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query Options</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.QueryOptions
   * @generated
   */
  EClass getQueryOptions();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CypherOption <em>Cypher Option</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cypher Option</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CypherOption
   * @generated
   */
  EClass getCypherOption();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CypherOption#getVersionNumber <em>Version Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Version Number</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CypherOption#getVersionNumber()
   * @see #getCypherOption()
   * @generated
   */
  EReference getCypherOption_VersionNumber();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.CypherOption#getConfigurationOption <em>Configuration Option</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Configuration Option</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CypherOption#getConfigurationOption()
   * @see #getCypherOption()
   * @generated
   */
  EReference getCypherOption_ConfigurationOption();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.VersionNumber <em>Version Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Version Number</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VersionNumber
   * @generated
   */
  EClass getVersionNumber();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.VersionNumber#getVersionNumber <em>Version Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Version Number</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VersionNumber#getVersionNumber()
   * @see #getVersionNumber()
   * @generated
   */
  EAttribute getVersionNumber_VersionNumber();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ConfigurationOption <em>Configuration Option</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Configuration Option</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ConfigurationOption
   * @generated
   */
  EClass getConfigurationOption();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ConfigurationOption#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Key</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ConfigurationOption#getKey()
   * @see #getConfigurationOption()
   * @generated
   */
  EAttribute getConfigurationOption_Key();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ConfigurationOption#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ConfigurationOption#getValue()
   * @see #getConfigurationOption()
   * @generated
   */
  EAttribute getConfigurationOption_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Query <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Query
   * @generated
   */
  EClass getQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RegularQuery <em>Regular Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regular Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RegularQuery
   * @generated
   */
  EClass getRegularQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.BulkImportQuery <em>Bulk Import Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bulk Import Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.BulkImportQuery
   * @generated
   */
  EClass getBulkImportQuery();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.BulkImportQuery#getPeriodicCommitHint <em>Periodic Commit Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Periodic Commit Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.BulkImportQuery#getPeriodicCommitHint()
   * @see #getBulkImportQuery()
   * @generated
   */
  EReference getBulkImportQuery_PeriodicCommitHint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.BulkImportQuery#getLoadCSVQuery <em>Load CSV Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Load CSV Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.BulkImportQuery#getLoadCSVQuery()
   * @see #getBulkImportQuery()
   * @generated
   */
  EReference getBulkImportQuery_LoadCSVQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PeriodicCommitHint <em>Periodic Commit Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Periodic Commit Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PeriodicCommitHint
   * @generated
   */
  EClass getPeriodicCommitHint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PeriodicCommitHint#getNumberOfRowsPerCommit <em>Number Of Rows Per Commit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number Of Rows Per Commit</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PeriodicCommitHint#getNumberOfRowsPerCommit()
   * @see #getPeriodicCommitHint()
   * @generated
   */
  EReference getPeriodicCommitHint_NumberOfRowsPerCommit();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery <em>Load CSV Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Load CSV Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery
   * @generated
   */
  EClass getLoadCSVQuery();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery#getLoadCSV <em>Load CSV</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Load CSV</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery#getLoadCSV()
   * @see #getLoadCSVQuery()
   * @generated
   */
  EReference getLoadCSVQuery_LoadCSV();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery#getSingleQuery <em>Single Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Single Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSVQuery#getSingleQuery()
   * @see #getLoadCSVQuery()
   * @generated
   */
  EReference getLoadCSVQuery_SingleQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Union <em>Union</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Union</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Union
   * @generated
   */
  EClass getUnion();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Union#isAll <em>All</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>All</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Union#isAll()
   * @see #getUnion()
   * @generated
   */
  EAttribute getUnion_All();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Union#getSingleQuery <em>Single Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Single Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Union#getSingleQuery()
   * @see #getUnion()
   * @generated
   */
  EReference getUnion_SingleQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.SingleQuery <em>Single Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SingleQuery
   * @generated
   */
  EClass getSingleQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.SinglePartQuery <em>Single Part Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single Part Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SinglePartQuery
   * @generated
   */
  EClass getSinglePartQuery();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getReadingClauses <em>Reading Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Reading Clauses</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getReadingClauses()
   * @see #getSinglePartQuery()
   * @generated
   */
  EReference getSinglePartQuery_ReadingClauses();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getReturn <em>Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getReturn()
   * @see #getSinglePartQuery()
   * @generated
   */
  EReference getSinglePartQuery_Return();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getUpdatingClauses <em>Updating Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Updating Clauses</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SinglePartQuery#getUpdatingClauses()
   * @see #getSinglePartQuery()
   * @generated
   */
  EReference getSinglePartQuery_UpdatingClauses();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartQuery <em>Multi Part Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multi Part Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartQuery
   * @generated
   */
  EClass getMultiPartQuery();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartQuery#getSubQueries <em>Sub Queries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sub Queries</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartQuery#getSubQueries()
   * @see #getMultiPartQuery()
   * @generated
   */
  EReference getMultiPartQuery_SubQueries();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartQuery#getSinglePartQuery <em>Single Part Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Single Part Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartQuery#getSinglePartQuery()
   * @see #getMultiPartQuery()
   * @generated
   */
  EReference getMultiPartQuery_SinglePartQuery();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery <em>Multi Part Sub Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multi Part Sub Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery
   * @generated
   */
  EClass getMultiPartSubQuery();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getReadingClauses <em>Reading Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Reading Clauses</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getReadingClauses()
   * @see #getMultiPartSubQuery()
   * @generated
   */
  EReference getMultiPartSubQuery_ReadingClauses();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getUpdatingClauses <em>Updating Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Updating Clauses</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getUpdatingClauses()
   * @see #getMultiPartSubQuery()
   * @generated
   */
  EReference getMultiPartSubQuery_UpdatingClauses();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getWithPart <em>With Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>With Part</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiPartSubQuery#getWithPart()
   * @see #getMultiPartSubQuery()
   * @generated
   */
  EReference getMultiPartSubQuery_WithPart();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Clause <em>Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Clause</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Clause
   * @generated
   */
  EClass getClause();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.UpdatingClause <em>Updating Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Updating Clause</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UpdatingClause
   * @generated
   */
  EClass getUpdatingClause();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ReadingClause <em>Reading Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reading Clause</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReadingClause
   * @generated
   */
  EClass getReadingClause();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Command <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Command
   * @generated
   */
  EClass getCommand();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CreateUniqueConstraint <em>Create Unique Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Unique Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CreateUniqueConstraint
   * @generated
   */
  EClass getCreateUniqueConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CreateNodePropertyExistenceConstraint <em>Create Node Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Node Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CreateNodePropertyExistenceConstraint
   * @generated
   */
  EClass getCreateNodePropertyExistenceConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CreateRelationshipPropertyExistenceConstraint <em>Create Relationship Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Relationship Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CreateRelationshipPropertyExistenceConstraint
   * @generated
   */
  EClass getCreateRelationshipPropertyExistenceConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CreateIndex <em>Create Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Index</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CreateIndex
   * @generated
   */
  EClass getCreateIndex();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CreateIndex#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CreateIndex#getIndex()
   * @see #getCreateIndex()
   * @generated
   */
  EReference getCreateIndex_Index();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.DropUniqueConstraint <em>Drop Unique Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Drop Unique Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropUniqueConstraint
   * @generated
   */
  EClass getDropUniqueConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.DropUniqueConstraint#getUniqueConstraint <em>Unique Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unique Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropUniqueConstraint#getUniqueConstraint()
   * @see #getDropUniqueConstraint()
   * @generated
   */
  EReference getDropUniqueConstraint_UniqueConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.DropNodePropertyExistenceConstraint <em>Drop Node Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Drop Node Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropNodePropertyExistenceConstraint
   * @generated
   */
  EClass getDropNodePropertyExistenceConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.DropNodePropertyExistenceConstraint#getNodePropertyExistenceConstraint <em>Node Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropNodePropertyExistenceConstraint#getNodePropertyExistenceConstraint()
   * @see #getDropNodePropertyExistenceConstraint()
   * @generated
   */
  EReference getDropNodePropertyExistenceConstraint_NodePropertyExistenceConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.DropRelationshipPropertyExistenceConstraint <em>Drop Relationship Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Drop Relationship Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropRelationshipPropertyExistenceConstraint
   * @generated
   */
  EClass getDropRelationshipPropertyExistenceConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.DropRelationshipPropertyExistenceConstraint#getRelationshipPropertyExistenceConstraint <em>Relationship Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Relationship Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropRelationshipPropertyExistenceConstraint#getRelationshipPropertyExistenceConstraint()
   * @see #getDropRelationshipPropertyExistenceConstraint()
   * @generated
   */
  EReference getDropRelationshipPropertyExistenceConstraint_RelationshipPropertyExistenceConstraint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.DropIndex <em>Drop Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Drop Index</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropIndex
   * @generated
   */
  EClass getDropIndex();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.DropIndex#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DropIndex#getIndex()
   * @see #getDropIndex()
   * @generated
   */
  EReference getDropIndex_Index();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Index <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Index
   * @generated
   */
  EClass getIndex();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Index#getNodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Index#getNodeLabel()
   * @see #getIndex()
   * @generated
   */
  EReference getIndex_NodeLabel();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Index#getPropertyKeyName <em>Property Key Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Property Key Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Index#getPropertyKeyName()
   * @see #getIndex()
   * @generated
   */
  EAttribute getIndex_PropertyKeyName();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.UniqueConstraint <em>Unique Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unique Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UniqueConstraint
   * @generated
   */
  EClass getUniqueConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getVariable()
   * @see #getUniqueConstraint()
   * @generated
   */
  EReference getUniqueConstraint_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getNodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getNodeLabel()
   * @see #getUniqueConstraint()
   * @generated
   */
  EReference getUniqueConstraint_NodeLabel();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getPropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UniqueConstraint#getPropertyExpression()
   * @see #getUniqueConstraint()
   * @generated
   */
  EReference getUniqueConstraint_PropertyExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint <em>Node Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint
   * @generated
   */
  EClass getNodePropertyExistenceConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getVariable()
   * @see #getNodePropertyExistenceConstraint()
   * @generated
   */
  EReference getNodePropertyExistenceConstraint_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getNodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getNodeLabel()
   * @see #getNodePropertyExistenceConstraint()
   * @generated
   */
  EReference getNodePropertyExistenceConstraint_NodeLabel();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getPropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePropertyExistenceConstraint#getPropertyExpression()
   * @see #getNodePropertyExistenceConstraint()
   * @generated
   */
  EReference getNodePropertyExistenceConstraint_PropertyExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint <em>Relationship Property Existence Constraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Property Existence Constraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint
   * @generated
   */
  EClass getRelationshipPropertyExistenceConstraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint#getRelationshipPattern <em>Relationship Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Relationship Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint#getRelationshipPattern()
   * @see #getRelationshipPropertyExistenceConstraint()
   * @generated
   */
  EReference getRelationshipPropertyExistenceConstraint_RelationshipPattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint#getPropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPropertyExistenceConstraint#getPropertyExpression()
   * @see #getRelationshipPropertyExistenceConstraint()
   * @generated
   */
  EReference getRelationshipPropertyExistenceConstraint_PropertyExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax <em>Relationship Pattern Syntax</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Pattern Syntax</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax
   * @generated
   */
  EClass getRelationshipPatternSyntax();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#isIncoming <em>Incoming</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Incoming</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#isIncoming()
   * @see #getRelationshipPatternSyntax()
   * @generated
   */
  EAttribute getRelationshipPatternSyntax_Incoming();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#getVariable()
   * @see #getRelationshipPatternSyntax()
   * @generated
   */
  EReference getRelationshipPatternSyntax_Variable();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#getRelType <em>Rel Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rel Type</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#getRelType()
   * @see #getRelationshipPatternSyntax()
   * @generated
   */
  EAttribute getRelationshipPatternSyntax_RelType();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#isOutgoing <em>Outgoing</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Outgoing</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPatternSyntax#isOutgoing()
   * @see #getRelationshipPatternSyntax()
   * @generated
   */
  EAttribute getRelationshipPatternSyntax_Outgoing();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSV <em>Load CSV</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Load CSV</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSV
   * @generated
   */
  EClass getLoadCSV();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSV#isWithHeaders <em>With Headers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>With Headers</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSV#isWithHeaders()
   * @see #getLoadCSV()
   * @generated
   */
  EAttribute getLoadCSV_WithHeaders();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSV#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSV#getExpression()
   * @see #getLoadCSV()
   * @generated
   */
  EReference getLoadCSV_Expression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSV#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSV#getVariable()
   * @see #getLoadCSV()
   * @generated
   */
  EReference getLoadCSV_Variable();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.LoadCSV#getFieldterminator <em>Fieldterminator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fieldterminator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LoadCSV#getFieldterminator()
   * @see #getLoadCSV()
   * @generated
   */
  EAttribute getLoadCSV_Fieldterminator();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Match <em>Match</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Match</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Match
   * @generated
   */
  EClass getMatch();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Match#isOptional <em>Optional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Optional</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Match#isOptional()
   * @see #getMatch()
   * @generated
   */
  EAttribute getMatch_Optional();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Match#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Match#getPattern()
   * @see #getMatch()
   * @generated
   */
  EReference getMatch_Pattern();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Match#getHints <em>Hints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Hints</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Match#getHints()
   * @see #getMatch()
   * @generated
   */
  EReference getMatch_Hints();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Match#getWhere <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Match#getWhere()
   * @see #getMatch()
   * @generated
   */
  EReference getMatch_Where();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Unwind <em>Unwind</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unwind</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Unwind
   * @generated
   */
  EClass getUnwind();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Unwind#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Unwind#getExpression()
   * @see #getUnwind()
   * @generated
   */
  EReference getUnwind_Expression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Unwind#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Unwind#getVariable()
   * @see #getUnwind()
   * @generated
   */
  EReference getUnwind_Variable();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Merge <em>Merge</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Merge</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Merge
   * @generated
   */
  EClass getMerge();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Merge#getPatternPart <em>Pattern Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern Part</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Merge#getPatternPart()
   * @see #getMerge()
   * @generated
   */
  EReference getMerge_PatternPart();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Merge#getMergeActions <em>Merge Actions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Merge Actions</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Merge#getMergeActions()
   * @see #getMerge()
   * @generated
   */
  EReference getMerge_MergeActions();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MergeAction <em>Merge Action</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Merge Action</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MergeAction
   * @generated
   */
  EClass getMergeAction();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.MergeAction#getAction <em>Action</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Action</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MergeAction#getAction()
   * @see #getMergeAction()
   * @generated
   */
  EAttribute getMergeAction_Action();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MergeAction#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MergeAction#getSet()
   * @see #getMergeAction()
   * @generated
   */
  EReference getMergeAction_Set();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Create <em>Create</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Create
   * @generated
   */
  EClass getCreate();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Create#isUniqueContraint <em>Unique Contraint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Unique Contraint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Create#isUniqueContraint()
   * @see #getCreate()
   * @generated
   */
  EAttribute getCreate_UniqueContraint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Create#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Create#getPattern()
   * @see #getCreate()
   * @generated
   */
  EReference getCreate_Pattern();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Set <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Set
   * @generated
   */
  EClass getSet();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Set#getSetItems <em>Set Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Set Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Set#getSetItems()
   * @see #getSet()
   * @generated
   */
  EReference getSet_SetItems();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.SetItem <em>Set Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Item</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SetItem
   * @generated
   */
  EClass getSetItem();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.SetItem#getPropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SetItem#getPropertyExpression()
   * @see #getSetItem()
   * @generated
   */
  EReference getSetItem_PropertyExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.SetItem#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SetItem#getExpression()
   * @see #getSetItem()
   * @generated
   */
  EReference getSetItem_Expression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.SetItem#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SetItem#getVariable()
   * @see #getSetItem()
   * @generated
   */
  EReference getSetItem_Variable();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Delete <em>Delete</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Delete
   * @generated
   */
  EClass getDelete();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Delete#isDetach <em>Detach</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Detach</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Delete#isDetach()
   * @see #getDelete()
   * @generated
   */
  EAttribute getDelete_Detach();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Delete#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Delete#getExpressions()
   * @see #getDelete()
   * @generated
   */
  EReference getDelete_Expressions();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Remove <em>Remove</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Remove</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Remove
   * @generated
   */
  EClass getRemove();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Remove#getRemoveItems <em>Remove Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Remove Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Remove#getRemoveItems()
   * @see #getRemove()
   * @generated
   */
  EReference getRemove_RemoveItems();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RemoveItem <em>Remove Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Remove Item</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RemoveItem
   * @generated
   */
  EClass getRemoveItem();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Foreach <em>Foreach</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Foreach</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Foreach
   * @generated
   */
  EClass getForeach();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Foreach#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Foreach#getVariable()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Foreach#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Foreach#getExpression()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Foreach#getUpdatingClauses <em>Updating Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Updating Clauses</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Foreach#getUpdatingClauses()
   * @see #getForeach()
   * @generated
   */
  EReference getForeach_UpdatingClauses();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.InQueryCall <em>In Query Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>In Query Call</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.InQueryCall
   * @generated
   */
  EClass getInQueryCall();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.InQueryCall#getInvocation <em>Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Invocation</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.InQueryCall#getInvocation()
   * @see #getInQueryCall()
   * @generated
   */
  EReference getInQueryCall_Invocation();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.InQueryCall#getYieldItems <em>Yield Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Yield Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.InQueryCall#getYieldItems()
   * @see #getInQueryCall()
   * @generated
   */
  EReference getInQueryCall_YieldItems();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.StandaloneCall <em>Standalone Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Standalone Call</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StandaloneCall
   * @generated
   */
  EClass getStandaloneCall();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StandaloneCall#getInvocation <em>Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Invocation</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StandaloneCall#getInvocation()
   * @see #getStandaloneCall()
   * @generated
   */
  EReference getStandaloneCall_Invocation();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StandaloneCall#getYieldItems <em>Yield Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Yield Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StandaloneCall#getYieldItems()
   * @see #getStandaloneCall()
   * @generated
   */
  EReference getStandaloneCall_YieldItems();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.YieldItems <em>Yield Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Yield Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.YieldItems
   * @generated
   */
  EClass getYieldItems();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.YieldItems#getItems <em>Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.YieldItems#getItems()
   * @see #getYieldItems()
   * @generated
   */
  EReference getYieldItems_Items();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.YieldItem <em>Yield Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Yield Item</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.YieldItem
   * @generated
   */
  EClass getYieldItem();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.YieldItem#getField <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Field</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.YieldItem#getField()
   * @see #getYieldItem()
   * @generated
   */
  EAttribute getYieldItem_Field();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.YieldItem#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.YieldItem#getVariable()
   * @see #getYieldItem()
   * @generated
   */
  EReference getYieldItem_Variable();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.With <em>With</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>With</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.With
   * @generated
   */
  EClass getWith();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.With#getReturnBody <em>Return Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Body</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.With#getReturnBody()
   * @see #getWith()
   * @generated
   */
  EReference getWith_ReturnBody();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.With#getWhere <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.With#getWhere()
   * @see #getWith()
   * @generated
   */
  EReference getWith_Where();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Return <em>Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Return
   * @generated
   */
  EClass getReturn();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Return#getReturn <em>Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Return</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Return#getReturn()
   * @see #getReturn()
   * @generated
   */
  EAttribute getReturn_Return();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Return#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Return#getBody()
   * @see #getReturn()
   * @generated
   */
  EReference getReturn_Body();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody <em>Return Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Body</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody
   * @generated
   */
  EClass getReturnBody();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody#isDistinct <em>Distinct</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Distinct</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody#isDistinct()
   * @see #getReturnBody()
   * @generated
   */
  EAttribute getReturnBody_Distinct();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody#getReturnItems <em>Return Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody#getReturnItems()
   * @see #getReturnBody()
   * @generated
   */
  EReference getReturnBody_ReturnItems();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody#getOrder <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Order</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody#getOrder()
   * @see #getReturnBody()
   * @generated
   */
  EReference getReturnBody_Order();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody#getSkip <em>Skip</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Skip</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody#getSkip()
   * @see #getReturnBody()
   * @generated
   */
  EReference getReturnBody_Skip();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnBody#getLimit <em>Limit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Limit</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnBody#getLimit()
   * @see #getReturnBody()
   * @generated
   */
  EReference getReturnBody_Limit();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItems <em>Return Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItems
   * @generated
   */
  EClass getReturnItems();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItems#getAll <em>All</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>All</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItems#getAll()
   * @see #getReturnItems()
   * @generated
   */
  EAttribute getReturnItems_All();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItems#getItems <em>Items</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Items</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItems#getItems()
   * @see #getReturnItems()
   * @generated
   */
  EReference getReturnItems_Items();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItem <em>Return Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Item</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItem
   * @generated
   */
  EClass getReturnItem();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItem#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItem#getExpression()
   * @see #getReturnItem()
   * @generated
   */
  EReference getReturnItem_Expression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ReturnItem#getAlias <em>Alias</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Alias</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ReturnItem#getAlias()
   * @see #getReturnItem()
   * @generated
   */
  EReference getReturnItem_Alias();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Order <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Order</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Order
   * @generated
   */
  EClass getOrder();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Order#getOrderBy <em>Order By</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Order By</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Order#getOrderBy()
   * @see #getOrder()
   * @generated
   */
  EReference getOrder_OrderBy();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Skip <em>Skip</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Skip</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Skip
   * @generated
   */
  EClass getSkip();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Skip#getSkip <em>Skip</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Skip</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Skip#getSkip()
   * @see #getSkip()
   * @generated
   */
  EReference getSkip_Skip();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Limit <em>Limit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Limit</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Limit
   * @generated
   */
  EClass getLimit();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Limit#getLimit <em>Limit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Limit</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Limit#getLimit()
   * @see #getLimit()
   * @generated
   */
  EReference getLimit_Limit();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.SortItem <em>Sort Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sort Item</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SortItem
   * @generated
   */
  EClass getSortItem();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.SortItem#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SortItem#getExpression()
   * @see #getSortItem()
   * @generated
   */
  EReference getSortItem_Expression();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.SortItem#getSort <em>Sort</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sort</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.SortItem#getSort()
   * @see #getSortItem()
   * @generated
   */
  EAttribute getSortItem_Sort();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Hint <em>Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Hint
   * @generated
   */
  EClass getHint();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Start <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Start
   * @generated
   */
  EClass getStart();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Start#getStartPoint <em>Start Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Start Point</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Start#getStartPoint()
   * @see #getStart()
   * @generated
   */
  EReference getStart_StartPoint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Start#getWhere <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Start#getWhere()
   * @see #getStart()
   * @generated
   */
  EReference getStart_Where();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.StartPoint <em>Start Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start Point</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StartPoint
   * @generated
   */
  EClass getStartPoint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StartPoint#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StartPoint#getVariable()
   * @see #getStartPoint()
   * @generated
   */
  EReference getStartPoint_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StartPoint#getLookup <em>Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StartPoint#getLookup()
   * @see #getStartPoint()
   * @generated
   */
  EReference getStartPoint_Lookup();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Lookup <em>Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Lookup
   * @generated
   */
  EClass getLookup();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodeLookup <em>Node Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLookup
   * @generated
   */
  EClass getNodeLookup();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipLookup <em>Relationship Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipLookup
   * @generated
   */
  EClass getRelationshipLookup();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup <em>Identified Index Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Identified Index Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup
   * @generated
   */
  EClass getIdentifiedIndexLookup();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getIndexName <em>Index Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Index Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getIndexName()
   * @see #getIdentifiedIndexLookup()
   * @generated
   */
  EAttribute getIdentifiedIndexLookup_IndexName();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Key</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getKey()
   * @see #getIdentifiedIndexLookup()
   * @generated
   */
  EAttribute getIdentifiedIndexLookup_Key();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getValue()
   * @see #getIdentifiedIndexLookup()
   * @generated
   */
  EAttribute getIdentifiedIndexLookup_Value();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getLegacyParameter <em>Legacy Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Legacy Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdentifiedIndexLookup#getLegacyParameter()
   * @see #getIdentifiedIndexLookup()
   * @generated
   */
  EReference getIdentifiedIndexLookup_LegacyParameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IndexQuery <em>Index Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexQuery
   * @generated
   */
  EClass getIndexQuery();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IndexQuery#getIndexName <em>Index Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Index Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexQuery#getIndexName()
   * @see #getIndexQuery()
   * @generated
   */
  EAttribute getIndexQuery_IndexName();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IndexQuery#getQuery <em>Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexQuery#getQuery()
   * @see #getIndexQuery()
   * @generated
   */
  EAttribute getIndexQuery_Query();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexQuery#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexQuery#getParameter()
   * @see #getIndexQuery()
   * @generated
   */
  EReference getIndexQuery_Parameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IdLookup <em>Id Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Id Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdLookup
   * @generated
   */
  EClass getIdLookup();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IdLookup#getIds <em>Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ids</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdLookup#getIds()
   * @see #getIdLookup()
   * @generated
   */
  EReference getIdLookup_Ids();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IdLookup#getLegacyParameter <em>Legacy Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Legacy Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdLookup#getLegacyParameter()
   * @see #getIdLookup()
   * @generated
   */
  EReference getIdLookup_LegacyParameter();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IdLookup#getWildcard <em>Wildcard</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Wildcard</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdLookup#getWildcard()
   * @see #getIdLookup()
   * @generated
   */
  EAttribute getIdLookup_Wildcard();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.LiteralIds <em>Literal Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal Ids</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LiteralIds
   * @generated
   */
  EClass getLiteralIds();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.LiteralIds#getIds <em>Ids</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ids</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LiteralIds#getIds()
   * @see #getLiteralIds()
   * @generated
   */
  EReference getLiteralIds_Ids();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Where <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Where
   * @generated
   */
  EClass getWhere();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Where#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Where#getExpression()
   * @see #getWhere()
   * @generated
   */
  EReference getWhere_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Pattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Pattern
   * @generated
   */
  EClass getPattern();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Pattern#getPatterns <em>Patterns</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Patterns</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Pattern#getPatterns()
   * @see #getPattern()
   * @generated
   */
  EReference getPattern_Patterns();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PatternPart <em>Pattern Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Part</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternPart
   * @generated
   */
  EClass getPatternPart();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternPart#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternPart#getVar()
   * @see #getPatternPart()
   * @generated
   */
  EReference getPatternPart_Var();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternPart#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Part</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternPart#getPart()
   * @see #getPatternPart()
   * @generated
   */
  EReference getPatternPart_Part();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.AnonymousPatternPart <em>Anonymous Pattern Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Anonymous Pattern Part</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AnonymousPatternPart
   * @generated
   */
  EClass getAnonymousPatternPart();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ShortestPathPattern <em>Shortest Path Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shortest Path Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ShortestPathPattern
   * @generated
   */
  EClass getShortestPathPattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ShortestPathPattern#getPatternElement <em>Pattern Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern Element</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ShortestPathPattern#getPatternElement()
   * @see #getShortestPathPattern()
   * @generated
   */
  EReference getShortestPathPattern_PatternElement();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PatternElement <em>Pattern Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Element</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElement
   * @generated
   */
  EClass getPatternElement();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternElement#getNodepattern <em>Nodepattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nodepattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElement#getNodepattern()
   * @see #getPatternElement()
   * @generated
   */
  EReference getPatternElement_Nodepattern();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.PatternElement#getChain <em>Chain</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Chain</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElement#getChain()
   * @see #getPatternElement()
   * @generated
   */
  EReference getPatternElement_Chain();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodePattern <em>Node Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePattern
   * @generated
   */
  EClass getNodePattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodePattern#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePattern#getVariable()
   * @see #getNodePattern()
   * @generated
   */
  EReference getNodePattern_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodePattern#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Properties</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodePattern#getProperties()
   * @see #getNodePattern()
   * @generated
   */
  EReference getNodePattern_Properties();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PatternElementChain <em>Pattern Element Chain</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Element Chain</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElementChain
   * @generated
   */
  EClass getPatternElementChain();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternElementChain#getRelationshipPattern <em>Relationship Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Relationship Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElementChain#getRelationshipPattern()
   * @see #getPatternElementChain()
   * @generated
   */
  EReference getPatternElementChain_RelationshipPattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternElementChain#getNodePattern <em>Node Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternElementChain#getNodePattern()
   * @see #getPatternElementChain()
   * @generated
   */
  EReference getPatternElementChain_NodePattern();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPattern <em>Relationship Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPattern
   * @generated
   */
  EClass getRelationshipPattern();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#isIncoming <em>Incoming</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Incoming</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#isIncoming()
   * @see #getRelationshipPattern()
   * @generated
   */
  EAttribute getRelationshipPattern_Incoming();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#getDetail <em>Detail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Detail</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#getDetail()
   * @see #getRelationshipPattern()
   * @generated
   */
  EReference getRelationshipPattern_Detail();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#isOutgoing <em>Outgoing</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Outgoing</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipPattern#isOutgoing()
   * @see #getRelationshipPattern()
   * @generated
   */
  EAttribute getRelationshipPattern_Outgoing();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipDetail <em>Relationship Detail</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Detail</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipDetail
   * @generated
   */
  EClass getRelationshipDetail();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getVariable()
   * @see #getRelationshipDetail()
   * @generated
   */
  EReference getRelationshipDetail_Variable();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#isOptional <em>Optional</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Optional</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#isOptional()
   * @see #getRelationshipDetail()
   * @generated
   */
  EAttribute getRelationshipDetail_Optional();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getRange <em>Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Range</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getRange()
   * @see #getRelationshipDetail()
   * @generated
   */
  EReference getRelationshipDetail_Range();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Properties</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipDetail#getProperties()
   * @see #getRelationshipDetail()
   * @generated
   */
  EReference getRelationshipDetail_Properties();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Properties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Properties</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Properties
   * @generated
   */
  EClass getProperties();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipTypes <em>Relationship Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationship Types</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipTypes
   * @generated
   */
  EClass getRelationshipTypes();

  /**
   * Returns the meta object for the attribute list '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipTypes#getRelTypeNames <em>Rel Type Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Rel Type Names</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipTypes#getRelTypeNames()
   * @see #getRelationshipTypes()
   * @generated
   */
  EAttribute getRelationshipTypes_RelTypeNames();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabels <em>Node Labels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Labels</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabels
   * @generated
   */
  EClass getNodeLabels();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabels#getNodeLabels <em>Node Labels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Node Labels</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabels#getNodeLabels()
   * @see #getNodeLabels()
   * @generated
   */
  EReference getNodeLabels_NodeLabels();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabel
   * @generated
   */
  EClass getNodeLabel();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabel#getLabelName <em>Label Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Label Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabel#getLabelName()
   * @see #getNodeLabel()
   * @generated
   */
  EAttribute getNodeLabel_LabelName();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RangeLiteral <em>Range Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Range Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RangeLiteral
   * @generated
   */
  EClass getRangeLiteral();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RangeLiteral#getLower <em>Lower</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lower</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RangeLiteral#getLower()
   * @see #getRangeLiteral()
   * @generated
   */
  EAttribute getRangeLiteral_Lower();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RangeLiteral#isVariableLength <em>Variable Length</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variable Length</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RangeLiteral#isVariableLength()
   * @see #getRangeLiteral()
   * @generated
   */
  EAttribute getRangeLiteral_VariableLength();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.RangeLiteral#getUpper <em>Upper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Upper</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RangeLiteral#getUpper()
   * @see #getRangeLiteral()
   * @generated
   */
  EAttribute getRangeLiteral_Upper();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.Expression#getPropertyLookups <em>Property Lookups</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Property Lookups</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Expression#getPropertyLookups()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_PropertyLookups();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Literal <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Literal
   * @generated
   */
  EClass getLiteral();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.BooleanLiteral <em>Boolean Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.BooleanLiteral
   * @generated
   */
  EClass getBooleanLiteral();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.BooleanLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.BooleanLiteral#getValue()
   * @see #getBooleanLiteral()
   * @generated
   */
  EAttribute getBooleanLiteral_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ListLiteral <em>List Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ListLiteral
   * @generated
   */
  EClass getListLiteral();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.ListLiteral#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ListLiteral#getExpressions()
   * @see #getListLiteral()
   * @generated
   */
  EReference getListLiteral_Expressions();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Reduce <em>Reduce</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reduce</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Reduce
   * @generated
   */
  EClass getReduce();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Reduce#getAccumulator <em>Accumulator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Accumulator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Reduce#getAccumulator()
   * @see #getReduce()
   * @generated
   */
  EReference getReduce_Accumulator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Reduce#getAccumulatorExpression <em>Accumulator Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Accumulator Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Reduce#getAccumulatorExpression()
   * @see #getReduce()
   * @generated
   */
  EReference getReduce_AccumulatorExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Reduce#getIdInColl <em>Id In Coll</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Id In Coll</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Reduce#getIdInColl()
   * @see #getReduce()
   * @generated
   */
  EReference getReduce_IdInColl();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Reduce#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Reduce#getExpression()
   * @see #getReduce()
   * @generated
   */
  EReference getReduce_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ParenthesizedExpression <em>Parenthesized Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parenthesized Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ParenthesizedExpression
   * @generated
   */
  EClass getParenthesizedExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ParenthesizedExpression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ParenthesizedExpression#getExpression()
   * @see #getParenthesizedExpression()
   * @generated
   */
  EReference getParenthesizedExpression_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern <em>Relationships Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Relationships Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern
   * @generated
   */
  EClass getRelationshipsPattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern#getNodePattern <em>Node Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern#getNodePattern()
   * @see #getRelationshipsPattern()
   * @generated
   */
  EReference getRelationshipsPattern_NodePattern();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern#getChain <em>Chain</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Chain</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RelationshipsPattern#getChain()
   * @see #getRelationshipsPattern()
   * @generated
   */
  EReference getRelationshipsPattern_Chain();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.FilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FilterExpression
   * @generated
   */
  EClass getFilterExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.FilterExpression#getIdInColl <em>Id In Coll</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Id In Coll</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FilterExpression#getIdInColl()
   * @see #getFilterExpression()
   * @generated
   */
  EReference getFilterExpression_IdInColl();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.FilterExpression#getWhere <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FilterExpression#getWhere()
   * @see #getFilterExpression()
   * @generated
   */
  EReference getFilterExpression_Where();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IdInColl <em>Id In Coll</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Id In Coll</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdInColl
   * @generated
   */
  EClass getIdInColl();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IdInColl#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdInColl#getVariable()
   * @see #getIdInColl()
   * @generated
   */
  EReference getIdInColl_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IdInColl#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IdInColl#getExpression()
   * @see #getIdInColl()
   * @generated
   */
  EReference getIdInColl_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.FunctionInvocation <em>Function Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Invocation</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FunctionInvocation
   * @generated
   */
  EClass getFunctionInvocation();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#getFunctionName()
   * @see #getFunctionInvocation()
   * @generated
   */
  EAttribute getFunctionInvocation_FunctionName();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#isDistinct <em>Distinct</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Distinct</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#isDistinct()
   * @see #getFunctionInvocation()
   * @generated
   */
  EAttribute getFunctionInvocation_Distinct();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.FunctionInvocation#getParameter()
   * @see #getFunctionInvocation()
   * @generated
   */
  EReference getFunctionInvocation_Parameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation <em>Explicit Procedure Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Explicit Procedure Invocation</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation
   * @generated
   */
  EClass getExplicitProcedureInvocation();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation#getProcedureName <em>Procedure Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation#getProcedureName()
   * @see #getExplicitProcedureInvocation()
   * @generated
   */
  EReference getExplicitProcedureInvocation_ProcedureName();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ExplicitProcedureInvocation#getParameter()
   * @see #getExplicitProcedureInvocation()
   * @generated
   */
  EReference getExplicitProcedureInvocation_Parameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ImplicitProcedureInvocation <em>Implicit Procedure Invocation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Implicit Procedure Invocation</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ImplicitProcedureInvocation
   * @generated
   */
  EClass getImplicitProcedureInvocation();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ImplicitProcedureInvocation#getProcedureName <em>Procedure Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ImplicitProcedureInvocation#getProcedureName()
   * @see #getImplicitProcedureInvocation()
   * @generated
   */
  EReference getImplicitProcedureInvocation_ProcedureName();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ProcedureName <em>Procedure Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Procedure Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ProcedureName
   * @generated
   */
  EClass getProcedureName();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ProcedureName#getNamespace <em>Namespace</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Namespace</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ProcedureName#getNamespace()
   * @see #getProcedureName()
   * @generated
   */
  EAttribute getProcedureName_Namespace();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ProcedureName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ProcedureName#getName()
   * @see #getProcedureName()
   * @generated
   */
  EAttribute getProcedureName_Name();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ListComprehension <em>List Comprehension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>List Comprehension</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ListComprehension
   * @generated
   */
  EClass getListComprehension();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ListComprehension#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ListComprehension#getFilterExpression()
   * @see #getListComprehension()
   * @generated
   */
  EReference getListComprehension_FilterExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ListComprehension#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ListComprehension#getExpression()
   * @see #getListComprehension()
   * @generated
   */
  EReference getListComprehension_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PatternComprehension <em>Pattern Comprehension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Comprehension</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternComprehension
   * @generated
   */
  EClass getPatternComprehension();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getPathVariable <em>Path Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Path Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getPathVariable()
   * @see #getPatternComprehension()
   * @generated
   */
  EReference getPatternComprehension_PathVariable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getPattern()
   * @see #getPatternComprehension()
   * @generated
   */
  EReference getPatternComprehension_Pattern();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getWhere <em>Where</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Where</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getWhere()
   * @see #getPatternComprehension()
   * @generated
   */
  EReference getPatternComprehension_Where();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PatternComprehension#getExpression()
   * @see #getPatternComprehension()
   * @generated
   */
  EReference getPatternComprehension_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PropertyLookup <em>Property Lookup</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Property Lookup</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyLookup
   * @generated
   */
  EClass getPropertyLookup();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.PropertyLookup#getPropertyKeyName <em>Property Key Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Property Key Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyLookup#getPropertyKeyName()
   * @see #getPropertyLookup()
   * @generated
   */
  EAttribute getPropertyLookup_PropertyKeyName();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.PropertyLookup#getPropertyOperator <em>Property Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Property Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyLookup#getPropertyOperator()
   * @see #getPropertyLookup()
   * @generated
   */
  EAttribute getPropertyLookup_PropertyOperator();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CaseExpression <em>Case Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseExpression
   * @generated
   */
  EClass getCaseExpression();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.CaseExpression#getCaseAlternatives <em>Case Alternatives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Case Alternatives</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseExpression#getCaseAlternatives()
   * @see #getCaseExpression()
   * @generated
   */
  EReference getCaseExpression_CaseAlternatives();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CaseExpression#getCaseExpression <em>Case Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Case Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseExpression#getCaseExpression()
   * @see #getCaseExpression()
   * @generated
   */
  EReference getCaseExpression_CaseExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CaseExpression#getElseExpression <em>Else Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseExpression#getElseExpression()
   * @see #getCaseExpression()
   * @generated
   */
  EReference getCaseExpression_ElseExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CaseAlternatives <em>Case Alternatives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case Alternatives</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseAlternatives
   * @generated
   */
  EClass getCaseAlternatives();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CaseAlternatives#getWhen <em>When</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>When</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseAlternatives#getWhen()
   * @see #getCaseAlternatives()
   * @generated
   */
  EReference getCaseAlternatives_When();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CaseAlternatives#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CaseAlternatives#getThen()
   * @see #getCaseAlternatives()
   * @generated
   */
  EReference getCaseAlternatives_Then();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VariableDeclaration
   * @generated
   */
  EClass getVariableDeclaration();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.VariableDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VariableDeclaration#getName()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Name();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StringLiteral
   * @generated
   */
  EClass getStringLiteral();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.StringLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StringLiteral#getValue()
   * @see #getStringLiteral()
   * @generated
   */
  EAttribute getStringLiteral_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NumberLiteral <em>Number Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NumberLiteral
   * @generated
   */
  EClass getNumberLiteral();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.NumberLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NumberLiteral#getValue()
   * @see #getNumberLiteral()
   * @generated
   */
  EAttribute getNumberLiteral_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MapLiteral <em>Map Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Literal</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MapLiteral
   * @generated
   */
  EClass getMapLiteral();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.MapLiteral#getEntries <em>Entries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entries</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MapLiteral#getEntries()
   * @see #getMapLiteral()
   * @generated
   */
  EReference getMapLiteral_Entries();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry <em>Map Literal Entry</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Literal Entry</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry
   * @generated
   */
  EClass getMapLiteralEntry();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Key</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry#getKey()
   * @see #getMapLiteralEntry()
   * @generated
   */
  EAttribute getMapLiteralEntry_Key();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MapLiteralEntry#getValue()
   * @see #getMapLiteralEntry()
   * @generated
   */
  EReference getMapLiteralEntry_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.LegacyParameter <em>Legacy Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Legacy Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LegacyParameter
   * @generated
   */
  EClass getLegacyParameter();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.LegacyParameter#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.LegacyParameter#getParameter()
   * @see #getLegacyParameter()
   * @generated
   */
  EAttribute getLegacyParameter_Parameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Parameter
   * @generated
   */
  EClass getParameter();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.Parameter#getParameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Parameter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Parameter#getParameter()
   * @see #getParameter()
   * @generated
   */
  EAttribute getParameter_Parameter();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyExpression
   * @generated
   */
  EClass getPropertyExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.DecimalInteger <em>Decimal Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decimal Integer</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DecimalInteger
   * @generated
   */
  EClass getDecimalInteger();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.DecimalInteger#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.DecimalInteger#getValue()
   * @see #getDecimalInteger()
   * @generated
   */
  EAttribute getDecimalInteger_Value();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.AllOptions <em>All Options</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Options</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AllOptions
   * @generated
   */
  EClass getAllOptions();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.AllOptions#isExplain <em>Explain</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Explain</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AllOptions#isExplain()
   * @see #getAllOptions()
   * @generated
   */
  EAttribute getAllOptions_Explain();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.AllOptions#isProfile <em>Profile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Profile</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AllOptions#isProfile()
   * @see #getAllOptions()
   * @generated
   */
  EAttribute getAllOptions_Profile();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.AllOptions#getCypherOption <em>Cypher Option</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Cypher Option</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AllOptions#getCypherOption()
   * @see #getAllOptions()
   * @generated
   */
  EReference getAllOptions_CypherOption();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.CombinedQuery <em>Combined Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Combined Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CombinedQuery
   * @generated
   */
  EClass getCombinedQuery();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.CombinedQuery#getSingleQuery <em>Single Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Single Query</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CombinedQuery#getSingleQuery()
   * @see #getCombinedQuery()
   * @generated
   */
  EReference getCombinedQuery_SingleQuery();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.CombinedQuery#getUnion <em>Union</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Union</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.CombinedQuery#getUnion()
   * @see #getCombinedQuery()
   * @generated
   */
  EReference getCombinedQuery_Union();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RemoveItemLabel <em>Remove Item Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Remove Item Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RemoveItemLabel
   * @generated
   */
  EClass getRemoveItemLabel();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RemoveItemLabel#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RemoveItemLabel#getVariable()
   * @see #getRemoveItemLabel()
   * @generated
   */
  EReference getRemoveItemLabel_Variable();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RemoveItemProperty <em>Remove Item Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Remove Item Property</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RemoveItemProperty
   * @generated
   */
  EClass getRemoveItemProperty();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RemoveItemProperty#getPropertyExpression <em>Property Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RemoveItemProperty#getPropertyExpression()
   * @see #getRemoveItemProperty()
   * @generated
   */
  EReference getRemoveItemProperty_PropertyExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IndexHint <em>Index Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexHint
   * @generated
   */
  EClass getIndexHint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexHint#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexHint#getVariable()
   * @see #getIndexHint()
   * @generated
   */
  EReference getIndexHint_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexHint#getNodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexHint#getNodeLabel()
   * @see #getIndexHint()
   * @generated
   */
  EReference getIndexHint_NodeLabel();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.IndexHint#getPropertyKeyName <em>Property Key Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Property Key Name</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexHint#getPropertyKeyName()
   * @see #getIndexHint()
   * @generated
   */
  EAttribute getIndexHint_PropertyKeyName();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.JoinHint <em>Join Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Join Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.JoinHint
   * @generated
   */
  EClass getJoinHint();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.JoinHint#getVariables <em>Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variables</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.JoinHint#getVariables()
   * @see #getJoinHint()
   * @generated
   */
  EReference getJoinHint_Variables();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ScanHint <em>Scan Hint</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Scan Hint</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ScanHint
   * @generated
   */
  EClass getScanHint();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ScanHint#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ScanHint#getVariable()
   * @see #getScanHint()
   * @generated
   */
  EReference getScanHint_Variable();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ScanHint#getNodeLabel <em>Node Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Node Label</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ScanHint#getNodeLabel()
   * @see #getScanHint()
   * @generated
   */
  EReference getScanHint_NodeLabel();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ShortestPath <em>Shortest Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shortest Path</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ShortestPath
   * @generated
   */
  EClass getShortestPath();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.AllShortestPaths <em>All Shortest Paths</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Shortest Paths</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AllShortestPaths
   * @generated
   */
  EClass getAllShortestPaths();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.OrExpression <em>Or Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.OrExpression
   * @generated
   */
  EClass getOrExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.OrExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.OrExpression#getLeft()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.OrExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.OrExpression#getOperator()
   * @see #getOrExpression()
   * @generated
   */
  EAttribute getOrExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.OrExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.OrExpression#getRight()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.XorExpression <em>Xor Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Xor Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.XorExpression
   * @generated
   */
  EClass getXorExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.XorExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.XorExpression#getLeft()
   * @see #getXorExpression()
   * @generated
   */
  EReference getXorExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.XorExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.XorExpression#getOperator()
   * @see #getXorExpression()
   * @generated
   */
  EAttribute getXorExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.XorExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.XorExpression#getRight()
   * @see #getXorExpression()
   * @generated
   */
  EReference getXorExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.AndExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AndExpression#getLeft()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.AndExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AndExpression#getOperator()
   * @see #getAndExpression()
   * @generated
   */
  EAttribute getAndExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.AndExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AndExpression#getRight()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NotExpression <em>Not Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NotExpression
   * @generated
   */
  EClass getNotExpression();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.NotExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NotExpression#getOperator()
   * @see #getNotExpression()
   * @generated
   */
  EAttribute getNotExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NotExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NotExpression#getLeft()
   * @see #getNotExpression()
   * @generated
   */
  EReference getNotExpression_Left();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ComparisonExpression <em>Comparison Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ComparisonExpression
   * @generated
   */
  EClass getComparisonExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getLeft()
   * @see #getComparisonExpression()
   * @generated
   */
  EReference getComparisonExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getOperator()
   * @see #getComparisonExpression()
   * @generated
   */
  EAttribute getComparisonExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ComparisonExpression#getRight()
   * @see #getComparisonExpression()
   * @generated
   */
  EReference getComparisonExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression <em>Add Or Subtract Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Or Subtract Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression
   * @generated
   */
  EClass getAddOrSubtractExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getLeft()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EReference getAddOrSubtractExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getOperator()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EAttribute getAddOrSubtractExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.AddOrSubtractExpression#getRight()
   * @see #getAddOrSubtractExpression()
   * @generated
   */
  EReference getAddOrSubtractExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression <em>Multiply Divide Modulo Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply Divide Modulo Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression
   * @generated
   */
  EClass getMultiplyDivideModuloExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getLeft()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EReference getMultiplyDivideModuloExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getOperator()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EAttribute getMultiplyDivideModuloExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.MultiplyDivideModuloExpression#getRight()
   * @see #getMultiplyDivideModuloExpression()
   * @generated
   */
  EReference getMultiplyDivideModuloExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PowerOfExpression <em>Power Of Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Power Of Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PowerOfExpression
   * @generated
   */
  EClass getPowerOfExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getLeft()
   * @see #getPowerOfExpression()
   * @generated
   */
  EReference getPowerOfExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getOperator()
   * @see #getPowerOfExpression()
   * @generated
   */
  EAttribute getPowerOfExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PowerOfExpression#getRight()
   * @see #getPowerOfExpression()
   * @generated
   */
  EReference getPowerOfExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression <em>Unary Add Or Subtract Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Add Or Subtract Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression
   * @generated
   */
  EClass getUnaryAddOrSubtractExpression();

  /**
   * Returns the meta object for the attribute '{@link io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression#getOperator()
   * @see #getUnaryAddOrSubtractExpression()
   * @generated
   */
  EAttribute getUnaryAddOrSubtractExpression_Operator();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.UnaryAddOrSubtractExpression#getLeft()
   * @see #getUnaryAddOrSubtractExpression()
   * @generated
   */
  EReference getUnaryAddOrSubtractExpression_Left();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression <em>String List Null Operator Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String List Null Operator Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression
   * @generated
   */
  EClass getStringListNullOperatorExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression#getLeft()
   * @see #getStringListNullOperatorExpression()
   * @generated
   */
  EReference getStringListNullOperatorExpression_Left();

  /**
   * Returns the meta object for the containment reference list '{@link io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StringListNullOperatorExpression#getExpressions()
   * @see #getStringListNullOperatorExpression()
   * @generated
   */
  EReference getStringListNullOperatorExpression_Expressions();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IndexLookupExpression <em>Index Lookup Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Lookup Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexLookupExpression
   * @generated
   */
  EClass getIndexLookupExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexLookupExpression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexLookupExpression#getExpression()
   * @see #getIndexLookupExpression()
   * @generated
   */
  EReference getIndexLookupExpression_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression <em>Index Range Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Range Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression
   * @generated
   */
  EClass getIndexRangeExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression#getLower <em>Lower</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lower</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression#getLower()
   * @see #getIndexRangeExpression()
   * @generated
   */
  EReference getIndexRangeExpression_Lower();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression#getUpper <em>Upper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Upper</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IndexRangeExpression#getUpper()
   * @see #getIndexRangeExpression()
   * @generated
   */
  EReference getIndexRangeExpression_Upper();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.RegExpMatchingExpression <em>Reg Exp Matching Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reg Exp Matching Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RegExpMatchingExpression
   * @generated
   */
  EClass getRegExpMatchingExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.RegExpMatchingExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.RegExpMatchingExpression#getRight()
   * @see #getRegExpMatchingExpression()
   * @generated
   */
  EReference getRegExpMatchingExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.InCollectionExpression <em>In Collection Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>In Collection Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.InCollectionExpression
   * @generated
   */
  EClass getInCollectionExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.InCollectionExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.InCollectionExpression#getRight()
   * @see #getInCollectionExpression()
   * @generated
   */
  EReference getInCollectionExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.StartsWithExpression <em>Starts With Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Starts With Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StartsWithExpression
   * @generated
   */
  EClass getStartsWithExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.StartsWithExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.StartsWithExpression#getRight()
   * @see #getStartsWithExpression()
   * @generated
   */
  EReference getStartsWithExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.EndsWithExpression <em>Ends With Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ends With Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.EndsWithExpression
   * @generated
   */
  EClass getEndsWithExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.EndsWithExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.EndsWithExpression#getRight()
   * @see #getEndsWithExpression()
   * @generated
   */
  EReference getEndsWithExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.ContainsExpression <em>Contains Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contains Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ContainsExpression
   * @generated
   */
  EClass getContainsExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.ContainsExpression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.ContainsExpression#getRight()
   * @see #getContainsExpression()
   * @generated
   */
  EReference getContainsExpression_Right();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IsNullExpression <em>Is Null Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Null Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IsNullExpression
   * @generated
   */
  EClass getIsNullExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.IsNotNullExpression <em>Is Not Null Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Is Not Null Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.IsNotNullExpression
   * @generated
   */
  EClass getIsNotNullExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.PropertyLookupExpression <em>Property Lookup Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Property Lookup Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyLookupExpression
   * @generated
   */
  EClass getPropertyLookupExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.PropertyLookupExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.PropertyLookupExpression#getLeft()
   * @see #getPropertyLookupExpression()
   * @generated
   */
  EReference getPropertyLookupExpression_Left();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabelsExpression <em>Node Labels Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Labels Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabelsExpression
   * @generated
   */
  EClass getNodeLabelsExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.NodeLabelsExpression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NodeLabelsExpression#getLeft()
   * @see #getNodeLabelsExpression()
   * @generated
   */
  EReference getNodeLabelsExpression_Left();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Count <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Count</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Count
   * @generated
   */
  EClass getCount();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Filter <em>Filter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Filter</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Filter
   * @generated
   */
  EClass getFilter();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Filter#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Filter#getFilterExpression()
   * @see #getFilter()
   * @generated
   */
  EReference getFilter_FilterExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Extract <em>Extract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extract</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Extract
   * @generated
   */
  EClass getExtract();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Extract#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Extract#getFilterExpression()
   * @see #getExtract()
   * @generated
   */
  EReference getExtract_FilterExpression();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Extract#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Extract#getExpression()
   * @see #getExtract()
   * @generated
   */
  EReference getExtract_Expression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.All <em>All</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.All
   * @generated
   */
  EClass getAll();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.All#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.All#getFilterExpression()
   * @see #getAll()
   * @generated
   */
  EReference getAll_FilterExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Any <em>Any</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Any</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Any
   * @generated
   */
  EClass getAny();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Any#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Any#getFilterExpression()
   * @see #getAny()
   * @generated
   */
  EReference getAny_FilterExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.None <em>None</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>None</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.None
   * @generated
   */
  EClass getNone();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.None#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.None#getFilterExpression()
   * @see #getNone()
   * @generated
   */
  EReference getNone_FilterExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.Single <em>Single</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Single
   * @generated
   */
  EClass getSingle();

  /**
   * Returns the meta object for the containment reference '{@link io.codekontor.opencypher.xtext.openCypher.Single#getFilterExpression <em>Filter Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Filter Expression</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.Single#getFilterExpression()
   * @see #getSingle()
   * @generated
   */
  EReference getSingle_FilterExpression();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.VariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Ref</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VariableRef
   * @generated
   */
  EClass getVariableRef();

  /**
   * Returns the meta object for the reference '{@link io.codekontor.opencypher.xtext.openCypher.VariableRef#getVariableRef <em>Variable Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable Ref</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.VariableRef#getVariableRef()
   * @see #getVariableRef()
   * @generated
   */
  EReference getVariableRef_VariableRef();

  /**
   * Returns the meta object for class '{@link io.codekontor.opencypher.xtext.openCypher.NULL <em>NULL</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>NULL</em>'.
   * @see io.codekontor.opencypher.xtext.openCypher.NULL
   * @generated
   */
  EClass getNULL();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  OpenCypherFactory getOpenCypherFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CypherImpl <em>Cypher</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CypherImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCypher()
     * @generated
     */
    EClass CYPHER = eINSTANCE.getCypher();

    /**
     * The meta object literal for the '<em><b>Query Options</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CYPHER__QUERY_OPTIONS = eINSTANCE.getCypher_QueryOptions();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CYPHER__STATEMENTS = eINSTANCE.getCypher_Statements();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.QueryOptionsImpl <em>Query Options</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.QueryOptionsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getQueryOptions()
     * @generated
     */
    EClass QUERY_OPTIONS = eINSTANCE.getQueryOptions();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CypherOptionImpl <em>Cypher Option</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CypherOptionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCypherOption()
     * @generated
     */
    EClass CYPHER_OPTION = eINSTANCE.getCypherOption();

    /**
     * The meta object literal for the '<em><b>Version Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CYPHER_OPTION__VERSION_NUMBER = eINSTANCE.getCypherOption_VersionNumber();

    /**
     * The meta object literal for the '<em><b>Configuration Option</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CYPHER_OPTION__CONFIGURATION_OPTION = eINSTANCE.getCypherOption_ConfigurationOption();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VersionNumberImpl <em>Version Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.VersionNumberImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVersionNumber()
     * @generated
     */
    EClass VERSION_NUMBER = eINSTANCE.getVersionNumber();

    /**
     * The meta object literal for the '<em><b>Version Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VERSION_NUMBER__VERSION_NUMBER = eINSTANCE.getVersionNumber_VersionNumber();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ConfigurationOptionImpl <em>Configuration Option</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ConfigurationOptionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getConfigurationOption()
     * @generated
     */
    EClass CONFIGURATION_OPTION = eINSTANCE.getConfigurationOption();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONFIGURATION_OPTION__KEY = eINSTANCE.getConfigurationOption_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONFIGURATION_OPTION__VALUE = eINSTANCE.getConfigurationOption_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StatementImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.QueryImpl <em>Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.QueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getQuery()
     * @generated
     */
    EClass QUERY = eINSTANCE.getQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RegularQueryImpl <em>Regular Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RegularQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRegularQuery()
     * @generated
     */
    EClass REGULAR_QUERY = eINSTANCE.getRegularQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.BulkImportQueryImpl <em>Bulk Import Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.BulkImportQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getBulkImportQuery()
     * @generated
     */
    EClass BULK_IMPORT_QUERY = eINSTANCE.getBulkImportQuery();

    /**
     * The meta object literal for the '<em><b>Periodic Commit Hint</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BULK_IMPORT_QUERY__PERIODIC_COMMIT_HINT = eINSTANCE.getBulkImportQuery_PeriodicCommitHint();

    /**
     * The meta object literal for the '<em><b>Load CSV Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BULK_IMPORT_QUERY__LOAD_CSV_QUERY = eINSTANCE.getBulkImportQuery_LoadCSVQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PeriodicCommitHintImpl <em>Periodic Commit Hint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PeriodicCommitHintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPeriodicCommitHint()
     * @generated
     */
    EClass PERIODIC_COMMIT_HINT = eINSTANCE.getPeriodicCommitHint();

    /**
     * The meta object literal for the '<em><b>Number Of Rows Per Commit</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PERIODIC_COMMIT_HINT__NUMBER_OF_ROWS_PER_COMMIT = eINSTANCE.getPeriodicCommitHint_NumberOfRowsPerCommit();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVQueryImpl <em>Load CSV Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLoadCSVQuery()
     * @generated
     */
    EClass LOAD_CSV_QUERY = eINSTANCE.getLoadCSVQuery();

    /**
     * The meta object literal for the '<em><b>Load CSV</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOAD_CSV_QUERY__LOAD_CSV = eINSTANCE.getLoadCSVQuery_LoadCSV();

    /**
     * The meta object literal for the '<em><b>Single Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOAD_CSV_QUERY__SINGLE_QUERY = eINSTANCE.getLoadCSVQuery_SingleQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnionImpl <em>Union</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.UnionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnion()
     * @generated
     */
    EClass UNION = eINSTANCE.getUnion();

    /**
     * The meta object literal for the '<em><b>All</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNION__ALL = eINSTANCE.getUnion_All();

    /**
     * The meta object literal for the '<em><b>Single Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNION__SINGLE_QUERY = eINSTANCE.getUnion_SingleQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SingleQueryImpl <em>Single Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SingleQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSingleQuery()
     * @generated
     */
    EClass SINGLE_QUERY = eINSTANCE.getSingleQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SinglePartQueryImpl <em>Single Part Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SinglePartQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSinglePartQuery()
     * @generated
     */
    EClass SINGLE_PART_QUERY = eINSTANCE.getSinglePartQuery();

    /**
     * The meta object literal for the '<em><b>Reading Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE_PART_QUERY__READING_CLAUSES = eINSTANCE.getSinglePartQuery_ReadingClauses();

    /**
     * The meta object literal for the '<em><b>Return</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE_PART_QUERY__RETURN = eINSTANCE.getSinglePartQuery_Return();

    /**
     * The meta object literal for the '<em><b>Updating Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE_PART_QUERY__UPDATING_CLAUSES = eINSTANCE.getSinglePartQuery_UpdatingClauses();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiPartQueryImpl <em>Multi Part Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiPartQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiPartQuery()
     * @generated
     */
    EClass MULTI_PART_QUERY = eINSTANCE.getMultiPartQuery();

    /**
     * The meta object literal for the '<em><b>Sub Queries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTI_PART_QUERY__SUB_QUERIES = eINSTANCE.getMultiPartQuery_SubQueries();

    /**
     * The meta object literal for the '<em><b>Single Part Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTI_PART_QUERY__SINGLE_PART_QUERY = eINSTANCE.getMultiPartQuery_SinglePartQuery();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiPartSubQueryImpl <em>Multi Part Sub Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiPartSubQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiPartSubQuery()
     * @generated
     */
    EClass MULTI_PART_SUB_QUERY = eINSTANCE.getMultiPartSubQuery();

    /**
     * The meta object literal for the '<em><b>Reading Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTI_PART_SUB_QUERY__READING_CLAUSES = eINSTANCE.getMultiPartSubQuery_ReadingClauses();

    /**
     * The meta object literal for the '<em><b>Updating Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTI_PART_SUB_QUERY__UPDATING_CLAUSES = eINSTANCE.getMultiPartSubQuery_UpdatingClauses();

    /**
     * The meta object literal for the '<em><b>With Part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTI_PART_SUB_QUERY__WITH_PART = eINSTANCE.getMultiPartSubQuery_WithPart();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ClauseImpl <em>Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ClauseImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getClause()
     * @generated
     */
    EClass CLAUSE = eINSTANCE.getClause();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UpdatingClauseImpl <em>Updating Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.UpdatingClauseImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUpdatingClause()
     * @generated
     */
    EClass UPDATING_CLAUSE = eINSTANCE.getUpdatingClause();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReadingClauseImpl <em>Reading Clause</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReadingClauseImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReadingClause()
     * @generated
     */
    EClass READING_CLAUSE = eINSTANCE.getReadingClause();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CommandImpl <em>Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CommandImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCommand()
     * @generated
     */
    EClass COMMAND = eINSTANCE.getCommand();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateUniqueConstraintImpl <em>Create Unique Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateUniqueConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateUniqueConstraint()
     * @generated
     */
    EClass CREATE_UNIQUE_CONSTRAINT = eINSTANCE.getCreateUniqueConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateNodePropertyExistenceConstraintImpl <em>Create Node Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateNodePropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateNodePropertyExistenceConstraint()
     * @generated
     */
    EClass CREATE_NODE_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getCreateNodePropertyExistenceConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateRelationshipPropertyExistenceConstraintImpl <em>Create Relationship Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateRelationshipPropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateRelationshipPropertyExistenceConstraint()
     * @generated
     */
    EClass CREATE_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getCreateRelationshipPropertyExistenceConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateIndexImpl <em>Create Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateIndexImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreateIndex()
     * @generated
     */
    EClass CREATE_INDEX = eINSTANCE.getCreateIndex();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_INDEX__INDEX = eINSTANCE.getCreateIndex_Index();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropUniqueConstraintImpl <em>Drop Unique Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DropUniqueConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropUniqueConstraint()
     * @generated
     */
    EClass DROP_UNIQUE_CONSTRAINT = eINSTANCE.getDropUniqueConstraint();

    /**
     * The meta object literal for the '<em><b>Unique Constraint</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DROP_UNIQUE_CONSTRAINT__UNIQUE_CONSTRAINT = eINSTANCE.getDropUniqueConstraint_UniqueConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropNodePropertyExistenceConstraintImpl <em>Drop Node Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DropNodePropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropNodePropertyExistenceConstraint()
     * @generated
     */
    EClass DROP_NODE_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getDropNodePropertyExistenceConstraint();

    /**
     * The meta object literal for the '<em><b>Node Property Existence Constraint</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DROP_NODE_PROPERTY_EXISTENCE_CONSTRAINT__NODE_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getDropNodePropertyExistenceConstraint_NodePropertyExistenceConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropRelationshipPropertyExistenceConstraintImpl <em>Drop Relationship Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DropRelationshipPropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropRelationshipPropertyExistenceConstraint()
     * @generated
     */
    EClass DROP_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getDropRelationshipPropertyExistenceConstraint();

    /**
     * The meta object literal for the '<em><b>Relationship Property Existence Constraint</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DROP_RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getDropRelationshipPropertyExistenceConstraint_RelationshipPropertyExistenceConstraint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DropIndexImpl <em>Drop Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DropIndexImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDropIndex()
     * @generated
     */
    EClass DROP_INDEX = eINSTANCE.getDropIndex();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DROP_INDEX__INDEX = eINSTANCE.getDropIndex_Index();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexImpl <em>Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndex()
     * @generated
     */
    EClass INDEX = eINSTANCE.getIndex();

    /**
     * The meta object literal for the '<em><b>Node Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX__NODE_LABEL = eINSTANCE.getIndex_NodeLabel();

    /**
     * The meta object literal for the '<em><b>Property Key Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX__PROPERTY_KEY_NAME = eINSTANCE.getIndex_PropertyKeyName();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UniqueConstraintImpl <em>Unique Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.UniqueConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUniqueConstraint()
     * @generated
     */
    EClass UNIQUE_CONSTRAINT = eINSTANCE.getUniqueConstraint();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNIQUE_CONSTRAINT__VARIABLE = eINSTANCE.getUniqueConstraint_Variable();

    /**
     * The meta object literal for the '<em><b>Node Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNIQUE_CONSTRAINT__NODE_LABEL = eINSTANCE.getUniqueConstraint_NodeLabel();

    /**
     * The meta object literal for the '<em><b>Property Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNIQUE_CONSTRAINT__PROPERTY_EXPRESSION = eINSTANCE.getUniqueConstraint_PropertyExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodePropertyExistenceConstraintImpl <em>Node Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodePropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodePropertyExistenceConstraint()
     * @generated
     */
    EClass NODE_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getNodePropertyExistenceConstraint();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PROPERTY_EXISTENCE_CONSTRAINT__VARIABLE = eINSTANCE.getNodePropertyExistenceConstraint_Variable();

    /**
     * The meta object literal for the '<em><b>Node Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PROPERTY_EXISTENCE_CONSTRAINT__NODE_LABEL = eINSTANCE.getNodePropertyExistenceConstraint_NodeLabel();

    /**
     * The meta object literal for the '<em><b>Property Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PROPERTY_EXISTENCE_CONSTRAINT__PROPERTY_EXPRESSION = eINSTANCE.getNodePropertyExistenceConstraint_PropertyExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPropertyExistenceConstraintImpl <em>Relationship Property Existence Constraint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPropertyExistenceConstraintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPropertyExistenceConstraint()
     * @generated
     */
    EClass RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT = eINSTANCE.getRelationshipPropertyExistenceConstraint();

    /**
     * The meta object literal for the '<em><b>Relationship Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__RELATIONSHIP_PATTERN = eINSTANCE.getRelationshipPropertyExistenceConstraint_RelationshipPattern();

    /**
     * The meta object literal for the '<em><b>Property Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT__PROPERTY_EXPRESSION = eINSTANCE.getRelationshipPropertyExistenceConstraint_PropertyExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternSyntaxImpl <em>Relationship Pattern Syntax</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternSyntaxImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPatternSyntax()
     * @generated
     */
    EClass RELATIONSHIP_PATTERN_SYNTAX = eINSTANCE.getRelationshipPatternSyntax();

    /**
     * The meta object literal for the '<em><b>Incoming</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_PATTERN_SYNTAX__INCOMING = eINSTANCE.getRelationshipPatternSyntax_Incoming();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_PATTERN_SYNTAX__VARIABLE = eINSTANCE.getRelationshipPatternSyntax_Variable();

    /**
     * The meta object literal for the '<em><b>Rel Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_PATTERN_SYNTAX__REL_TYPE = eINSTANCE.getRelationshipPatternSyntax_RelType();

    /**
     * The meta object literal for the '<em><b>Outgoing</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_PATTERN_SYNTAX__OUTGOING = eINSTANCE.getRelationshipPatternSyntax_Outgoing();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVImpl <em>Load CSV</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LoadCSVImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLoadCSV()
     * @generated
     */
    EClass LOAD_CSV = eINSTANCE.getLoadCSV();

    /**
     * The meta object literal for the '<em><b>With Headers</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOAD_CSV__WITH_HEADERS = eINSTANCE.getLoadCSV_WithHeaders();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOAD_CSV__EXPRESSION = eINSTANCE.getLoadCSV_Expression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOAD_CSV__VARIABLE = eINSTANCE.getLoadCSV_Variable();

    /**
     * The meta object literal for the '<em><b>Fieldterminator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOAD_CSV__FIELDTERMINATOR = eINSTANCE.getLoadCSV_Fieldterminator();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MatchImpl <em>Match</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MatchImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMatch()
     * @generated
     */
    EClass MATCH = eINSTANCE.getMatch();

    /**
     * The meta object literal for the '<em><b>Optional</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATCH__OPTIONAL = eINSTANCE.getMatch_Optional();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATCH__PATTERN = eINSTANCE.getMatch_Pattern();

    /**
     * The meta object literal for the '<em><b>Hints</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATCH__HINTS = eINSTANCE.getMatch_Hints();

    /**
     * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATCH__WHERE = eINSTANCE.getMatch_Where();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnwindImpl <em>Unwind</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.UnwindImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnwind()
     * @generated
     */
    EClass UNWIND = eINSTANCE.getUnwind();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNWIND__EXPRESSION = eINSTANCE.getUnwind_Expression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNWIND__VARIABLE = eINSTANCE.getUnwind_Variable();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MergeImpl <em>Merge</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MergeImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMerge()
     * @generated
     */
    EClass MERGE = eINSTANCE.getMerge();

    /**
     * The meta object literal for the '<em><b>Pattern Part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MERGE__PATTERN_PART = eINSTANCE.getMerge_PatternPart();

    /**
     * The meta object literal for the '<em><b>Merge Actions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MERGE__MERGE_ACTIONS = eINSTANCE.getMerge_MergeActions();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MergeActionImpl <em>Merge Action</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MergeActionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMergeAction()
     * @generated
     */
    EClass MERGE_ACTION = eINSTANCE.getMergeAction();

    /**
     * The meta object literal for the '<em><b>Action</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MERGE_ACTION__ACTION = eINSTANCE.getMergeAction_Action();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MERGE_ACTION__SET = eINSTANCE.getMergeAction_Set();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CreateImpl <em>Create</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CreateImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCreate()
     * @generated
     */
    EClass CREATE = eINSTANCE.getCreate();

    /**
     * The meta object literal for the '<em><b>Unique Contraint</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CREATE__UNIQUE_CONTRAINT = eINSTANCE.getCreate_UniqueContraint();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE__PATTERN = eINSTANCE.getCreate_Pattern();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SetImpl <em>Set</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SetImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSet()
     * @generated
     */
    EClass SET = eINSTANCE.getSet();

    /**
     * The meta object literal for the '<em><b>Set Items</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET__SET_ITEMS = eINSTANCE.getSet_SetItems();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SetItemImpl <em>Set Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SetItemImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSetItem()
     * @generated
     */
    EClass SET_ITEM = eINSTANCE.getSetItem();

    /**
     * The meta object literal for the '<em><b>Property Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_ITEM__PROPERTY_EXPRESSION = eINSTANCE.getSetItem_PropertyExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_ITEM__EXPRESSION = eINSTANCE.getSetItem_Expression();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_ITEM__VARIABLE = eINSTANCE.getSetItem_Variable();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DeleteImpl <em>Delete</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DeleteImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDelete()
     * @generated
     */
    EClass DELETE = eINSTANCE.getDelete();

    /**
     * The meta object literal for the '<em><b>Detach</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DELETE__DETACH = eINSTANCE.getDelete_Detach();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE__EXPRESSIONS = eINSTANCE.getDelete_Expressions();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveImpl <em>Remove</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemove()
     * @generated
     */
    EClass REMOVE = eINSTANCE.getRemove();

    /**
     * The meta object literal for the '<em><b>Remove Items</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REMOVE__REMOVE_ITEMS = eINSTANCE.getRemove_RemoveItems();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemImpl <em>Remove Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItem()
     * @generated
     */
    EClass REMOVE_ITEM = eINSTANCE.getRemoveItem();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ForeachImpl <em>Foreach</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ForeachImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getForeach()
     * @generated
     */
    EClass FOREACH = eINSTANCE.getForeach();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__VARIABLE = eINSTANCE.getForeach_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__EXPRESSION = eINSTANCE.getForeach_Expression();

    /**
     * The meta object literal for the '<em><b>Updating Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOREACH__UPDATING_CLAUSES = eINSTANCE.getForeach_UpdatingClauses();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.InQueryCallImpl <em>In Query Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.InQueryCallImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getInQueryCall()
     * @generated
     */
    EClass IN_QUERY_CALL = eINSTANCE.getInQueryCall();

    /**
     * The meta object literal for the '<em><b>Invocation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IN_QUERY_CALL__INVOCATION = eINSTANCE.getInQueryCall_Invocation();

    /**
     * The meta object literal for the '<em><b>Yield Items</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IN_QUERY_CALL__YIELD_ITEMS = eINSTANCE.getInQueryCall_YieldItems();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StandaloneCallImpl <em>Standalone Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StandaloneCallImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStandaloneCall()
     * @generated
     */
    EClass STANDALONE_CALL = eINSTANCE.getStandaloneCall();

    /**
     * The meta object literal for the '<em><b>Invocation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STANDALONE_CALL__INVOCATION = eINSTANCE.getStandaloneCall_Invocation();

    /**
     * The meta object literal for the '<em><b>Yield Items</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STANDALONE_CALL__YIELD_ITEMS = eINSTANCE.getStandaloneCall_YieldItems();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.YieldItemsImpl <em>Yield Items</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.YieldItemsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getYieldItems()
     * @generated
     */
    EClass YIELD_ITEMS = eINSTANCE.getYieldItems();

    /**
     * The meta object literal for the '<em><b>Items</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference YIELD_ITEMS__ITEMS = eINSTANCE.getYieldItems_Items();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.YieldItemImpl <em>Yield Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.YieldItemImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getYieldItem()
     * @generated
     */
    EClass YIELD_ITEM = eINSTANCE.getYieldItem();

    /**
     * The meta object literal for the '<em><b>Field</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute YIELD_ITEM__FIELD = eINSTANCE.getYieldItem_Field();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference YIELD_ITEM__VARIABLE = eINSTANCE.getYieldItem_Variable();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.WithImpl <em>With</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.WithImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getWith()
     * @generated
     */
    EClass WITH = eINSTANCE.getWith();

    /**
     * The meta object literal for the '<em><b>Return Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH__RETURN_BODY = eINSTANCE.getWith_ReturnBody();

    /**
     * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH__WHERE = eINSTANCE.getWith_Where();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnImpl <em>Return</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturn()
     * @generated
     */
    EClass RETURN = eINSTANCE.getReturn();

    /**
     * The meta object literal for the '<em><b>Return</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RETURN__RETURN = eINSTANCE.getReturn_Return();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN__BODY = eINSTANCE.getReturn_Body();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnBodyImpl <em>Return Body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnBodyImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnBody()
     * @generated
     */
    EClass RETURN_BODY = eINSTANCE.getReturnBody();

    /**
     * The meta object literal for the '<em><b>Distinct</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RETURN_BODY__DISTINCT = eINSTANCE.getReturnBody_Distinct();

    /**
     * The meta object literal for the '<em><b>Return Items</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_BODY__RETURN_ITEMS = eINSTANCE.getReturnBody_ReturnItems();

    /**
     * The meta object literal for the '<em><b>Order</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_BODY__ORDER = eINSTANCE.getReturnBody_Order();

    /**
     * The meta object literal for the '<em><b>Skip</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_BODY__SKIP = eINSTANCE.getReturnBody_Skip();

    /**
     * The meta object literal for the '<em><b>Limit</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_BODY__LIMIT = eINSTANCE.getReturnBody_Limit();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemsImpl <em>Return Items</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnItems()
     * @generated
     */
    EClass RETURN_ITEMS = eINSTANCE.getReturnItems();

    /**
     * The meta object literal for the '<em><b>All</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RETURN_ITEMS__ALL = eINSTANCE.getReturnItems_All();

    /**
     * The meta object literal for the '<em><b>Items</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_ITEMS__ITEMS = eINSTANCE.getReturnItems_Items();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemImpl <em>Return Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReturnItemImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReturnItem()
     * @generated
     */
    EClass RETURN_ITEM = eINSTANCE.getReturnItem();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_ITEM__EXPRESSION = eINSTANCE.getReturnItem_Expression();

    /**
     * The meta object literal for the '<em><b>Alias</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_ITEM__ALIAS = eINSTANCE.getReturnItem_Alias();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.OrderImpl <em>Order</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OrderImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getOrder()
     * @generated
     */
    EClass ORDER = eINSTANCE.getOrder();

    /**
     * The meta object literal for the '<em><b>Order By</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ORDER__ORDER_BY = eINSTANCE.getOrder_OrderBy();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SkipImpl <em>Skip</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SkipImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSkip()
     * @generated
     */
    EClass SKIP = eINSTANCE.getSkip();

    /**
     * The meta object literal for the '<em><b>Skip</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SKIP__SKIP = eINSTANCE.getSkip_Skip();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LimitImpl <em>Limit</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LimitImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLimit()
     * @generated
     */
    EClass LIMIT = eINSTANCE.getLimit();

    /**
     * The meta object literal for the '<em><b>Limit</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIMIT__LIMIT = eINSTANCE.getLimit_Limit();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SortItemImpl <em>Sort Item</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SortItemImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSortItem()
     * @generated
     */
    EClass SORT_ITEM = eINSTANCE.getSortItem();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SORT_ITEM__EXPRESSION = eINSTANCE.getSortItem_Expression();

    /**
     * The meta object literal for the '<em><b>Sort</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SORT_ITEM__SORT = eINSTANCE.getSortItem_Sort();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.HintImpl <em>Hint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.HintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getHint()
     * @generated
     */
    EClass HINT = eINSTANCE.getHint();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartImpl <em>Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StartImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStart()
     * @generated
     */
    EClass START = eINSTANCE.getStart();

    /**
     * The meta object literal for the '<em><b>Start Point</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START__START_POINT = eINSTANCE.getStart_StartPoint();

    /**
     * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START__WHERE = eINSTANCE.getStart_Where();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartPointImpl <em>Start Point</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StartPointImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStartPoint()
     * @generated
     */
    EClass START_POINT = eINSTANCE.getStartPoint();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START_POINT__VARIABLE = eINSTANCE.getStartPoint_Variable();

    /**
     * The meta object literal for the '<em><b>Lookup</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START_POINT__LOOKUP = eINSTANCE.getStartPoint_Lookup();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LookupImpl <em>Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLookup()
     * @generated
     */
    EClass LOOKUP = eINSTANCE.getLookup();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLookupImpl <em>Node Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLookup()
     * @generated
     */
    EClass NODE_LOOKUP = eINSTANCE.getNodeLookup();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipLookupImpl <em>Relationship Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipLookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipLookup()
     * @generated
     */
    EClass RELATIONSHIP_LOOKUP = eINSTANCE.getRelationshipLookup();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdentifiedIndexLookupImpl <em>Identified Index Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IdentifiedIndexLookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdentifiedIndexLookup()
     * @generated
     */
    EClass IDENTIFIED_INDEX_LOOKUP = eINSTANCE.getIdentifiedIndexLookup();

    /**
     * The meta object literal for the '<em><b>Index Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIED_INDEX_LOOKUP__INDEX_NAME = eINSTANCE.getIdentifiedIndexLookup_IndexName();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIED_INDEX_LOOKUP__KEY = eINSTANCE.getIdentifiedIndexLookup_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIED_INDEX_LOOKUP__VALUE = eINSTANCE.getIdentifiedIndexLookup_Value();

    /**
     * The meta object literal for the '<em><b>Legacy Parameter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDENTIFIED_INDEX_LOOKUP__LEGACY_PARAMETER = eINSTANCE.getIdentifiedIndexLookup_LegacyParameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexQueryImpl <em>Index Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexQuery()
     * @generated
     */
    EClass INDEX_QUERY = eINSTANCE.getIndexQuery();

    /**
     * The meta object literal for the '<em><b>Index Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX_QUERY__INDEX_NAME = eINSTANCE.getIndexQuery_IndexName();

    /**
     * The meta object literal for the '<em><b>Query</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX_QUERY__QUERY = eINSTANCE.getIndexQuery_Query();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_QUERY__PARAMETER = eINSTANCE.getIndexQuery_Parameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdLookupImpl <em>Id Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IdLookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdLookup()
     * @generated
     */
    EClass ID_LOOKUP = eINSTANCE.getIdLookup();

    /**
     * The meta object literal for the '<em><b>Ids</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ID_LOOKUP__IDS = eINSTANCE.getIdLookup_Ids();

    /**
     * The meta object literal for the '<em><b>Legacy Parameter</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ID_LOOKUP__LEGACY_PARAMETER = eINSTANCE.getIdLookup_LegacyParameter();

    /**
     * The meta object literal for the '<em><b>Wildcard</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ID_LOOKUP__WILDCARD = eINSTANCE.getIdLookup_Wildcard();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LiteralIdsImpl <em>Literal Ids</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LiteralIdsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLiteralIds()
     * @generated
     */
    EClass LITERAL_IDS = eINSTANCE.getLiteralIds();

    /**
     * The meta object literal for the '<em><b>Ids</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LITERAL_IDS__IDS = eINSTANCE.getLiteralIds_Ids();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.WhereImpl <em>Where</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.WhereImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getWhere()
     * @generated
     */
    EClass WHERE = eINSTANCE.getWhere();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHERE__EXPRESSION = eINSTANCE.getWhere_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternImpl <em>Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPattern()
     * @generated
     */
    EClass PATTERN = eINSTANCE.getPattern();

    /**
     * The meta object literal for the '<em><b>Patterns</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN__PATTERNS = eINSTANCE.getPattern_Patterns();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternPartImpl <em>Pattern Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternPartImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternPart()
     * @generated
     */
    EClass PATTERN_PART = eINSTANCE.getPatternPart();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_PART__VAR = eINSTANCE.getPatternPart_Var();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_PART__PART = eINSTANCE.getPatternPart_Part();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AnonymousPatternPartImpl <em>Anonymous Pattern Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AnonymousPatternPartImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAnonymousPatternPart()
     * @generated
     */
    EClass ANONYMOUS_PATTERN_PART = eINSTANCE.getAnonymousPatternPart();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathPatternImpl <em>Shortest Path Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathPatternImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getShortestPathPattern()
     * @generated
     */
    EClass SHORTEST_PATH_PATTERN = eINSTANCE.getShortestPathPattern();

    /**
     * The meta object literal for the '<em><b>Pattern Element</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHORTEST_PATH_PATTERN__PATTERN_ELEMENT = eINSTANCE.getShortestPathPattern_PatternElement();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternElementImpl <em>Pattern Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternElementImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternElement()
     * @generated
     */
    EClass PATTERN_ELEMENT = eINSTANCE.getPatternElement();

    /**
     * The meta object literal for the '<em><b>Nodepattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_ELEMENT__NODEPATTERN = eINSTANCE.getPatternElement_Nodepattern();

    /**
     * The meta object literal for the '<em><b>Chain</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_ELEMENT__CHAIN = eINSTANCE.getPatternElement_Chain();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodePatternImpl <em>Node Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodePatternImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodePattern()
     * @generated
     */
    EClass NODE_PATTERN = eINSTANCE.getNodePattern();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PATTERN__VARIABLE = eINSTANCE.getNodePattern_Variable();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PATTERN__PROPERTIES = eINSTANCE.getNodePattern_Properties();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternElementChainImpl <em>Pattern Element Chain</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternElementChainImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternElementChain()
     * @generated
     */
    EClass PATTERN_ELEMENT_CHAIN = eINSTANCE.getPatternElementChain();

    /**
     * The meta object literal for the '<em><b>Relationship Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_ELEMENT_CHAIN__RELATIONSHIP_PATTERN = eINSTANCE.getPatternElementChain_RelationshipPattern();

    /**
     * The meta object literal for the '<em><b>Node Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_ELEMENT_CHAIN__NODE_PATTERN = eINSTANCE.getPatternElementChain_NodePattern();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternImpl <em>Relationship Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipPatternImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipPattern()
     * @generated
     */
    EClass RELATIONSHIP_PATTERN = eINSTANCE.getRelationshipPattern();

    /**
     * The meta object literal for the '<em><b>Incoming</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_PATTERN__INCOMING = eINSTANCE.getRelationshipPattern_Incoming();

    /**
     * The meta object literal for the '<em><b>Detail</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_PATTERN__DETAIL = eINSTANCE.getRelationshipPattern_Detail();

    /**
     * The meta object literal for the '<em><b>Outgoing</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_PATTERN__OUTGOING = eINSTANCE.getRelationshipPattern_Outgoing();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipDetailImpl <em>Relationship Detail</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipDetailImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipDetail()
     * @generated
     */
    EClass RELATIONSHIP_DETAIL = eINSTANCE.getRelationshipDetail();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_DETAIL__VARIABLE = eINSTANCE.getRelationshipDetail_Variable();

    /**
     * The meta object literal for the '<em><b>Optional</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_DETAIL__OPTIONAL = eINSTANCE.getRelationshipDetail_Optional();

    /**
     * The meta object literal for the '<em><b>Range</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_DETAIL__RANGE = eINSTANCE.getRelationshipDetail_Range();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIP_DETAIL__PROPERTIES = eINSTANCE.getRelationshipDetail_Properties();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertiesImpl <em>Properties</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertiesImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getProperties()
     * @generated
     */
    EClass PROPERTIES = eINSTANCE.getProperties();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipTypesImpl <em>Relationship Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipTypesImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipTypes()
     * @generated
     */
    EClass RELATIONSHIP_TYPES = eINSTANCE.getRelationshipTypes();

    /**
     * The meta object literal for the '<em><b>Rel Type Names</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RELATIONSHIP_TYPES__REL_TYPE_NAMES = eINSTANCE.getRelationshipTypes_RelTypeNames();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsImpl <em>Node Labels</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabels()
     * @generated
     */
    EClass NODE_LABELS = eINSTANCE.getNodeLabels();

    /**
     * The meta object literal for the '<em><b>Node Labels</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_LABELS__NODE_LABELS = eINSTANCE.getNodeLabels_NodeLabels();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelImpl <em>Node Label</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabel()
     * @generated
     */
    EClass NODE_LABEL = eINSTANCE.getNodeLabel();

    /**
     * The meta object literal for the '<em><b>Label Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_LABEL__LABEL_NAME = eINSTANCE.getNodeLabel_LabelName();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RangeLiteralImpl <em>Range Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RangeLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRangeLiteral()
     * @generated
     */
    EClass RANGE_LITERAL = eINSTANCE.getRangeLiteral();

    /**
     * The meta object literal for the '<em><b>Lower</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANGE_LITERAL__LOWER = eINSTANCE.getRangeLiteral_Lower();

    /**
     * The meta object literal for the '<em><b>Variable Length</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANGE_LITERAL__VARIABLE_LENGTH = eINSTANCE.getRangeLiteral_VariableLength();

    /**
     * The meta object literal for the '<em><b>Upper</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANGE_LITERAL__UPPER = eINSTANCE.getRangeLiteral_Upper();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Property Lookups</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__PROPERTY_LOOKUPS = eINSTANCE.getExpression_PropertyLookups();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LiteralImpl <em>Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLiteral()
     * @generated
     */
    EClass LITERAL = eINSTANCE.getLiteral();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.BooleanLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getBooleanLiteral()
     * @generated
     */
    EClass BOOLEAN_LITERAL = eINSTANCE.getBooleanLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_LITERAL__VALUE = eINSTANCE.getBooleanLiteral_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ListLiteralImpl <em>List Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ListLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getListLiteral()
     * @generated
     */
    EClass LIST_LITERAL = eINSTANCE.getListLiteral();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_LITERAL__EXPRESSIONS = eINSTANCE.getListLiteral_Expressions();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ReduceImpl <em>Reduce</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ReduceImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getReduce()
     * @generated
     */
    EClass REDUCE = eINSTANCE.getReduce();

    /**
     * The meta object literal for the '<em><b>Accumulator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REDUCE__ACCUMULATOR = eINSTANCE.getReduce_Accumulator();

    /**
     * The meta object literal for the '<em><b>Accumulator Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REDUCE__ACCUMULATOR_EXPRESSION = eINSTANCE.getReduce_AccumulatorExpression();

    /**
     * The meta object literal for the '<em><b>Id In Coll</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REDUCE__ID_IN_COLL = eINSTANCE.getReduce_IdInColl();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REDUCE__EXPRESSION = eINSTANCE.getReduce_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ParenthesizedExpressionImpl <em>Parenthesized Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ParenthesizedExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getParenthesizedExpression()
     * @generated
     */
    EClass PARENTHESIZED_EXPRESSION = eINSTANCE.getParenthesizedExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARENTHESIZED_EXPRESSION__EXPRESSION = eINSTANCE.getParenthesizedExpression_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RelationshipsPatternImpl <em>Relationships Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RelationshipsPatternImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRelationshipsPattern()
     * @generated
     */
    EClass RELATIONSHIPS_PATTERN = eINSTANCE.getRelationshipsPattern();

    /**
     * The meta object literal for the '<em><b>Node Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIPS_PATTERN__NODE_PATTERN = eINSTANCE.getRelationshipsPattern_NodePattern();

    /**
     * The meta object literal for the '<em><b>Chain</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RELATIONSHIPS_PATTERN__CHAIN = eINSTANCE.getRelationshipsPattern_Chain();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FilterExpressionImpl <em>Filter Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.FilterExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFilterExpression()
     * @generated
     */
    EClass FILTER_EXPRESSION = eINSTANCE.getFilterExpression();

    /**
     * The meta object literal for the '<em><b>Id In Coll</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILTER_EXPRESSION__ID_IN_COLL = eINSTANCE.getFilterExpression_IdInColl();

    /**
     * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILTER_EXPRESSION__WHERE = eINSTANCE.getFilterExpression_Where();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IdInCollImpl <em>Id In Coll</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IdInCollImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIdInColl()
     * @generated
     */
    EClass ID_IN_COLL = eINSTANCE.getIdInColl();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ID_IN_COLL__VARIABLE = eINSTANCE.getIdInColl_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ID_IN_COLL__EXPRESSION = eINSTANCE.getIdInColl_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FunctionInvocationImpl <em>Function Invocation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.FunctionInvocationImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFunctionInvocation()
     * @generated
     */
    EClass FUNCTION_INVOCATION = eINSTANCE.getFunctionInvocation();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_INVOCATION__FUNCTION_NAME = eINSTANCE.getFunctionInvocation_FunctionName();

    /**
     * The meta object literal for the '<em><b>Distinct</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_INVOCATION__DISTINCT = eINSTANCE.getFunctionInvocation_Distinct();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_INVOCATION__PARAMETER = eINSTANCE.getFunctionInvocation_Parameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExplicitProcedureInvocationImpl <em>Explicit Procedure Invocation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ExplicitProcedureInvocationImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExplicitProcedureInvocation()
     * @generated
     */
    EClass EXPLICIT_PROCEDURE_INVOCATION = eINSTANCE.getExplicitProcedureInvocation();

    /**
     * The meta object literal for the '<em><b>Procedure Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPLICIT_PROCEDURE_INVOCATION__PROCEDURE_NAME = eINSTANCE.getExplicitProcedureInvocation_ProcedureName();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPLICIT_PROCEDURE_INVOCATION__PARAMETER = eINSTANCE.getExplicitProcedureInvocation_Parameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ImplicitProcedureInvocationImpl <em>Implicit Procedure Invocation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ImplicitProcedureInvocationImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getImplicitProcedureInvocation()
     * @generated
     */
    EClass IMPLICIT_PROCEDURE_INVOCATION = eINSTANCE.getImplicitProcedureInvocation();

    /**
     * The meta object literal for the '<em><b>Procedure Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPLICIT_PROCEDURE_INVOCATION__PROCEDURE_NAME = eINSTANCE.getImplicitProcedureInvocation_ProcedureName();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ProcedureNameImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getProcedureName()
     * @generated
     */
    EClass PROCEDURE_NAME = eINSTANCE.getProcedureName();

    /**
     * The meta object literal for the '<em><b>Namespace</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCEDURE_NAME__NAMESPACE = eINSTANCE.getProcedureName_Namespace();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCEDURE_NAME__NAME = eINSTANCE.getProcedureName_Name();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ListComprehensionImpl <em>List Comprehension</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ListComprehensionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getListComprehension()
     * @generated
     */
    EClass LIST_COMPREHENSION = eINSTANCE.getListComprehension();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_COMPREHENSION__FILTER_EXPRESSION = eINSTANCE.getListComprehension_FilterExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIST_COMPREHENSION__EXPRESSION = eINSTANCE.getListComprehension_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PatternComprehensionImpl <em>Pattern Comprehension</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PatternComprehensionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPatternComprehension()
     * @generated
     */
    EClass PATTERN_COMPREHENSION = eINSTANCE.getPatternComprehension();

    /**
     * The meta object literal for the '<em><b>Path Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_COMPREHENSION__PATH_VARIABLE = eINSTANCE.getPatternComprehension_PathVariable();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_COMPREHENSION__PATTERN = eINSTANCE.getPatternComprehension_Pattern();

    /**
     * The meta object literal for the '<em><b>Where</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_COMPREHENSION__WHERE = eINSTANCE.getPatternComprehension_Where();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_COMPREHENSION__EXPRESSION = eINSTANCE.getPatternComprehension_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupImpl <em>Property Lookup</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyLookup()
     * @generated
     */
    EClass PROPERTY_LOOKUP = eINSTANCE.getPropertyLookup();

    /**
     * The meta object literal for the '<em><b>Property Key Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROPERTY_LOOKUP__PROPERTY_KEY_NAME = eINSTANCE.getPropertyLookup_PropertyKeyName();

    /**
     * The meta object literal for the '<em><b>Property Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROPERTY_LOOKUP__PROPERTY_OPERATOR = eINSTANCE.getPropertyLookup_PropertyOperator();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CaseExpressionImpl <em>Case Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CaseExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCaseExpression()
     * @generated
     */
    EClass CASE_EXPRESSION = eINSTANCE.getCaseExpression();

    /**
     * The meta object literal for the '<em><b>Case Alternatives</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_EXPRESSION__CASE_ALTERNATIVES = eINSTANCE.getCaseExpression_CaseAlternatives();

    /**
     * The meta object literal for the '<em><b>Case Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_EXPRESSION__CASE_EXPRESSION = eINSTANCE.getCaseExpression_CaseExpression();

    /**
     * The meta object literal for the '<em><b>Else Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_EXPRESSION__ELSE_EXPRESSION = eINSTANCE.getCaseExpression_ElseExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CaseAlternativesImpl <em>Case Alternatives</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CaseAlternativesImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCaseAlternatives()
     * @generated
     */
    EClass CASE_ALTERNATIVES = eINSTANCE.getCaseAlternatives();

    /**
     * The meta object literal for the '<em><b>When</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_ALTERNATIVES__WHEN = eINSTANCE.getCaseAlternatives_When();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_ALTERNATIVES__THEN = eINSTANCE.getCaseAlternatives_Then();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.VariableDeclarationImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__NAME = eINSTANCE.getVariableDeclaration_Name();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StringLiteralImpl <em>String Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StringLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStringLiteral()
     * @generated
     */
    EClass STRING_LITERAL = eINSTANCE.getStringLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_LITERAL__VALUE = eINSTANCE.getStringLiteral_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NumberLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNumberLiteral()
     * @generated
     */
    EClass NUMBER_LITERAL = eINSTANCE.getNumberLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_LITERAL__VALUE = eINSTANCE.getNumberLiteral_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralImpl <em>Map Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMapLiteral()
     * @generated
     */
    EClass MAP_LITERAL = eINSTANCE.getMapLiteral();

    /**
     * The meta object literal for the '<em><b>Entries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL__ENTRIES = eINSTANCE.getMapLiteral_Entries();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralEntryImpl <em>Map Literal Entry</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MapLiteralEntryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMapLiteralEntry()
     * @generated
     */
    EClass MAP_LITERAL_ENTRY = eINSTANCE.getMapLiteralEntry();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAP_LITERAL_ENTRY__KEY = eINSTANCE.getMapLiteralEntry_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL_ENTRY__VALUE = eINSTANCE.getMapLiteralEntry_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.LegacyParameterImpl <em>Legacy Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.LegacyParameterImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getLegacyParameter()
     * @generated
     */
    EClass LEGACY_PARAMETER = eINSTANCE.getLegacyParameter();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LEGACY_PARAMETER__PARAMETER = eINSTANCE.getLegacyParameter_Parameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ParameterImpl <em>Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ParameterImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getParameter()
     * @generated
     */
    EClass PARAMETER = eINSTANCE.getParameter();

    /**
     * The meta object literal for the '<em><b>Parameter</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER__PARAMETER = eINSTANCE.getParameter_Parameter();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyExpressionImpl <em>Property Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyExpression()
     * @generated
     */
    EClass PROPERTY_EXPRESSION = eINSTANCE.getPropertyExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.DecimalIntegerImpl <em>Decimal Integer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.DecimalIntegerImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getDecimalInteger()
     * @generated
     */
    EClass DECIMAL_INTEGER = eINSTANCE.getDecimalInteger();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECIMAL_INTEGER__VALUE = eINSTANCE.getDecimalInteger_Value();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllOptionsImpl <em>All Options</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AllOptionsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAllOptions()
     * @generated
     */
    EClass ALL_OPTIONS = eINSTANCE.getAllOptions();

    /**
     * The meta object literal for the '<em><b>Explain</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALL_OPTIONS__EXPLAIN = eINSTANCE.getAllOptions_Explain();

    /**
     * The meta object literal for the '<em><b>Profile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALL_OPTIONS__PROFILE = eINSTANCE.getAllOptions_Profile();

    /**
     * The meta object literal for the '<em><b>Cypher Option</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALL_OPTIONS__CYPHER_OPTION = eINSTANCE.getAllOptions_CypherOption();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CombinedQueryImpl <em>Combined Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CombinedQueryImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCombinedQuery()
     * @generated
     */
    EClass COMBINED_QUERY = eINSTANCE.getCombinedQuery();

    /**
     * The meta object literal for the '<em><b>Single Query</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMBINED_QUERY__SINGLE_QUERY = eINSTANCE.getCombinedQuery_SingleQuery();

    /**
     * The meta object literal for the '<em><b>Union</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMBINED_QUERY__UNION = eINSTANCE.getCombinedQuery_Union();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemLabelImpl <em>Remove Item Label</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemLabelImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItemLabel()
     * @generated
     */
    EClass REMOVE_ITEM_LABEL = eINSTANCE.getRemoveItemLabel();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REMOVE_ITEM_LABEL__VARIABLE = eINSTANCE.getRemoveItemLabel_Variable();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemPropertyImpl <em>Remove Item Property</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RemoveItemPropertyImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRemoveItemProperty()
     * @generated
     */
    EClass REMOVE_ITEM_PROPERTY = eINSTANCE.getRemoveItemProperty();

    /**
     * The meta object literal for the '<em><b>Property Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REMOVE_ITEM_PROPERTY__PROPERTY_EXPRESSION = eINSTANCE.getRemoveItemProperty_PropertyExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexHintImpl <em>Index Hint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexHintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexHint()
     * @generated
     */
    EClass INDEX_HINT = eINSTANCE.getIndexHint();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_HINT__VARIABLE = eINSTANCE.getIndexHint_Variable();

    /**
     * The meta object literal for the '<em><b>Node Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_HINT__NODE_LABEL = eINSTANCE.getIndexHint_NodeLabel();

    /**
     * The meta object literal for the '<em><b>Property Key Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX_HINT__PROPERTY_KEY_NAME = eINSTANCE.getIndexHint_PropertyKeyName();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.JoinHintImpl <em>Join Hint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.JoinHintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getJoinHint()
     * @generated
     */
    EClass JOIN_HINT = eINSTANCE.getJoinHint();

    /**
     * The meta object literal for the '<em><b>Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference JOIN_HINT__VARIABLES = eINSTANCE.getJoinHint_Variables();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ScanHintImpl <em>Scan Hint</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ScanHintImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getScanHint()
     * @generated
     */
    EClass SCAN_HINT = eINSTANCE.getScanHint();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SCAN_HINT__VARIABLE = eINSTANCE.getScanHint_Variable();

    /**
     * The meta object literal for the '<em><b>Node Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SCAN_HINT__NODE_LABEL = eINSTANCE.getScanHint_NodeLabel();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathImpl <em>Shortest Path</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ShortestPathImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getShortestPath()
     * @generated
     */
    EClass SHORTEST_PATH = eINSTANCE.getShortestPath();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllShortestPathsImpl <em>All Shortest Paths</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AllShortestPathsImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAllShortestPaths()
     * @generated
     */
    EClass ALL_SHORTEST_PATHS = eINSTANCE.getAllShortestPaths();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.OrExpressionImpl <em>Or Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OrExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getOrExpression()
     * @generated
     */
    EClass OR_EXPRESSION = eINSTANCE.getOrExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__LEFT = eINSTANCE.getOrExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR_EXPRESSION__OPERATOR = eINSTANCE.getOrExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__RIGHT = eINSTANCE.getOrExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.XorExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getXorExpression()
     * @generated
     */
    EClass XOR_EXPRESSION = eINSTANCE.getXorExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference XOR_EXPRESSION__LEFT = eINSTANCE.getXorExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute XOR_EXPRESSION__OPERATOR = eINSTANCE.getXorExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference XOR_EXPRESSION__RIGHT = eINSTANCE.getXorExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AndExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__LEFT = eINSTANCE.getAndExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION__OPERATOR = eINSTANCE.getAndExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__RIGHT = eINSTANCE.getAndExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NotExpressionImpl <em>Not Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NotExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNotExpression()
     * @generated
     */
    EClass NOT_EXPRESSION = eINSTANCE.getNotExpression();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_EXPRESSION__OPERATOR = eINSTANCE.getNotExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_EXPRESSION__LEFT = eINSTANCE.getNotExpression_Left();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ComparisonExpressionImpl <em>Comparison Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ComparisonExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getComparisonExpression()
     * @generated
     */
    EClass COMPARISON_EXPRESSION = eINSTANCE.getComparisonExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON_EXPRESSION__LEFT = eINSTANCE.getComparisonExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON_EXPRESSION__OPERATOR = eINSTANCE.getComparisonExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON_EXPRESSION__RIGHT = eINSTANCE.getComparisonExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AddOrSubtractExpressionImpl <em>Add Or Subtract Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AddOrSubtractExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAddOrSubtractExpression()
     * @generated
     */
    EClass ADD_OR_SUBTRACT_EXPRESSION = eINSTANCE.getAddOrSubtractExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OR_SUBTRACT_EXPRESSION__LEFT = eINSTANCE.getAddOrSubtractExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = eINSTANCE.getAddOrSubtractExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADD_OR_SUBTRACT_EXPRESSION__RIGHT = eINSTANCE.getAddOrSubtractExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.MultiplyDivideModuloExpressionImpl <em>Multiply Divide Modulo Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.MultiplyDivideModuloExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getMultiplyDivideModuloExpression()
     * @generated
     */
    EClass MULTIPLY_DIVIDE_MODULO_EXPRESSION = eINSTANCE.getMultiplyDivideModuloExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_DIVIDE_MODULO_EXPRESSION__LEFT = eINSTANCE.getMultiplyDivideModuloExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLY_DIVIDE_MODULO_EXPRESSION__OPERATOR = eINSTANCE.getMultiplyDivideModuloExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLY_DIVIDE_MODULO_EXPRESSION__RIGHT = eINSTANCE.getMultiplyDivideModuloExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PowerOfExpressionImpl <em>Power Of Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PowerOfExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPowerOfExpression()
     * @generated
     */
    EClass POWER_OF_EXPRESSION = eINSTANCE.getPowerOfExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POWER_OF_EXPRESSION__LEFT = eINSTANCE.getPowerOfExpression_Left();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POWER_OF_EXPRESSION__OPERATOR = eINSTANCE.getPowerOfExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POWER_OF_EXPRESSION__RIGHT = eINSTANCE.getPowerOfExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.UnaryAddOrSubtractExpressionImpl <em>Unary Add Or Subtract Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.UnaryAddOrSubtractExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getUnaryAddOrSubtractExpression()
     * @generated
     */
    EClass UNARY_ADD_OR_SUBTRACT_EXPRESSION = eINSTANCE.getUnaryAddOrSubtractExpression();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_ADD_OR_SUBTRACT_EXPRESSION__OPERATOR = eINSTANCE.getUnaryAddOrSubtractExpression_Operator();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_ADD_OR_SUBTRACT_EXPRESSION__LEFT = eINSTANCE.getUnaryAddOrSubtractExpression_Left();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StringListNullOperatorExpressionImpl <em>String List Null Operator Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StringListNullOperatorExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStringListNullOperatorExpression()
     * @generated
     */
    EClass STRING_LIST_NULL_OPERATOR_EXPRESSION = eINSTANCE.getStringListNullOperatorExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRING_LIST_NULL_OPERATOR_EXPRESSION__LEFT = eINSTANCE.getStringListNullOperatorExpression_Left();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRING_LIST_NULL_OPERATOR_EXPRESSION__EXPRESSIONS = eINSTANCE.getStringListNullOperatorExpression_Expressions();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexLookupExpressionImpl <em>Index Lookup Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexLookupExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexLookupExpression()
     * @generated
     */
    EClass INDEX_LOOKUP_EXPRESSION = eINSTANCE.getIndexLookupExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_LOOKUP_EXPRESSION__EXPRESSION = eINSTANCE.getIndexLookupExpression_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IndexRangeExpressionImpl <em>Index Range Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IndexRangeExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIndexRangeExpression()
     * @generated
     */
    EClass INDEX_RANGE_EXPRESSION = eINSTANCE.getIndexRangeExpression();

    /**
     * The meta object literal for the '<em><b>Lower</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_RANGE_EXPRESSION__LOWER = eINSTANCE.getIndexRangeExpression_Lower();

    /**
     * The meta object literal for the '<em><b>Upper</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_RANGE_EXPRESSION__UPPER = eINSTANCE.getIndexRangeExpression_Upper();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.RegExpMatchingExpressionImpl <em>Reg Exp Matching Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.RegExpMatchingExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getRegExpMatchingExpression()
     * @generated
     */
    EClass REG_EXP_MATCHING_EXPRESSION = eINSTANCE.getRegExpMatchingExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REG_EXP_MATCHING_EXPRESSION__RIGHT = eINSTANCE.getRegExpMatchingExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.InCollectionExpressionImpl <em>In Collection Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.InCollectionExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getInCollectionExpression()
     * @generated
     */
    EClass IN_COLLECTION_EXPRESSION = eINSTANCE.getInCollectionExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IN_COLLECTION_EXPRESSION__RIGHT = eINSTANCE.getInCollectionExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.StartsWithExpressionImpl <em>Starts With Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.StartsWithExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getStartsWithExpression()
     * @generated
     */
    EClass STARTS_WITH_EXPRESSION = eINSTANCE.getStartsWithExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STARTS_WITH_EXPRESSION__RIGHT = eINSTANCE.getStartsWithExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.EndsWithExpressionImpl <em>Ends With Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.EndsWithExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getEndsWithExpression()
     * @generated
     */
    EClass ENDS_WITH_EXPRESSION = eINSTANCE.getEndsWithExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENDS_WITH_EXPRESSION__RIGHT = eINSTANCE.getEndsWithExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ContainsExpressionImpl <em>Contains Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ContainsExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getContainsExpression()
     * @generated
     */
    EClass CONTAINS_EXPRESSION = eINSTANCE.getContainsExpression();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTAINS_EXPRESSION__RIGHT = eINSTANCE.getContainsExpression_Right();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IsNullExpressionImpl <em>Is Null Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IsNullExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIsNullExpression()
     * @generated
     */
    EClass IS_NULL_EXPRESSION = eINSTANCE.getIsNullExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.IsNotNullExpressionImpl <em>Is Not Null Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.IsNotNullExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getIsNotNullExpression()
     * @generated
     */
    EClass IS_NOT_NULL_EXPRESSION = eINSTANCE.getIsNotNullExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupExpressionImpl <em>Property Lookup Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.PropertyLookupExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getPropertyLookupExpression()
     * @generated
     */
    EClass PROPERTY_LOOKUP_EXPRESSION = eINSTANCE.getPropertyLookupExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROPERTY_LOOKUP_EXPRESSION__LEFT = eINSTANCE.getPropertyLookupExpression_Left();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsExpressionImpl <em>Node Labels Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NodeLabelsExpressionImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNodeLabelsExpression()
     * @generated
     */
    EClass NODE_LABELS_EXPRESSION = eINSTANCE.getNodeLabelsExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_LABELS_EXPRESSION__LEFT = eINSTANCE.getNodeLabelsExpression_Left();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.CountImpl <em>Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.CountImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getCount()
     * @generated
     */
    EClass COUNT = eINSTANCE.getCount();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.FilterImpl <em>Filter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.FilterImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getFilter()
     * @generated
     */
    EClass FILTER = eINSTANCE.getFilter();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FILTER__FILTER_EXPRESSION = eINSTANCE.getFilter_FilterExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.ExtractImpl <em>Extract</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.ExtractImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getExtract()
     * @generated
     */
    EClass EXTRACT = eINSTANCE.getExtract();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTRACT__FILTER_EXPRESSION = eINSTANCE.getExtract_FilterExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTRACT__EXPRESSION = eINSTANCE.getExtract_Expression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AllImpl <em>All</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AllImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAll()
     * @generated
     */
    EClass ALL = eINSTANCE.getAll();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALL__FILTER_EXPRESSION = eINSTANCE.getAll_FilterExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.AnyImpl <em>Any</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.AnyImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getAny()
     * @generated
     */
    EClass ANY = eINSTANCE.getAny();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ANY__FILTER_EXPRESSION = eINSTANCE.getAny_FilterExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NoneImpl <em>None</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NoneImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNone()
     * @generated
     */
    EClass NONE = eINSTANCE.getNone();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NONE__FILTER_EXPRESSION = eINSTANCE.getNone_FilterExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.SingleImpl <em>Single</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.SingleImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getSingle()
     * @generated
     */
    EClass SINGLE = eINSTANCE.getSingle();

    /**
     * The meta object literal for the '<em><b>Filter Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE__FILTER_EXPRESSION = eINSTANCE.getSingle_FilterExpression();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.VariableRefImpl <em>Variable Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.VariableRefImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getVariableRef()
     * @generated
     */
    EClass VARIABLE_REF = eINSTANCE.getVariableRef();

    /**
     * The meta object literal for the '<em><b>Variable Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REF__VARIABLE_REF = eINSTANCE.getVariableRef_VariableRef();

    /**
     * The meta object literal for the '{@link io.codekontor.opencypher.xtext.openCypher.impl.NULLImpl <em>NULL</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see io.codekontor.opencypher.xtext.openCypher.impl.NULLImpl
     * @see io.codekontor.opencypher.xtext.openCypher.impl.OpenCypherPackageImpl#getNULL()
     * @generated
     */
    EClass NULL = eINSTANCE.getNULL();

  }

} //OpenCypherPackage
