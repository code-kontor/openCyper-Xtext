<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>

	<!-- Create uniqueness constraint -->
	<template id="opencypher.build-in.command.createConstraintIsUnique"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Create uniqueness constraint" enabled="true"
		name="createConstraintIsUnique"><![CDATA[CREATE CONSTRAINT ON (${variable}:${label}) ASSERT ${variable}.${property} IS UNIQUE;${cursor}]]></template>

	<!-- Drop uniqueness constraint -->
	<template id="opencypher.build-in.command.dropConstraintIsUnique"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Drop uniqueness constraint" enabled="true"
		name="dropConstraintIsUnique"><![CDATA[DROP CONSTRAINT ON (${variable}:${label}) ASSERT ${variable}.${property} IS UNIQUE;${cursor}]]></template>

	<!-- Create index -->
	<template id="opencypher.build-in.command.createIndex"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Create index" enabled="true" name="createIndex"><![CDATA[CREATE INDEX ON :${label}(${property});${cursor}]]></template>

	<!-- Drop index -->
	<template id="opencypher.build-in.command.dropIndex"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Drop index" enabled="true" name="dropIndex"><![CDATA[DROP INDEX ON :${label}(${property});${cursor}]]></template>

	<!-- Create node property existence constraint -->
	<template
		id="opencypher.build-in.command.createNodePropertyExistenceConstraint"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Create node property existence constraint"
		enabled="true" name="createNodePropertyExistenceConstraint"><![CDATA[CREATE CONSTRAINT ON (${variable}:${label}) ASSERT exists(${variable}.${property});${cursor}]]></template>

	<!-- Drop node property existence constraint -->
	<template
		id="opencypher.build-in.command.dropNodePropertyExistenceConstraint"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Drop node property existence constraint"
		enabled="true" name="dropNodePropertyExistenceConstraint"><![CDATA[DROP CONSTRAINT ON (${variable}:${label}) ASSERT exists(${variable}.${property});${cursor}]]></template>

	<!-- Create relationship property existence constraint -->
	<template
		id="opencypher.build-in.command.createRelationshipPropertyExistenceConstraint"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Create relationship property existence constraint"
		enabled="true" name="createRelationshipPropertyExistenceConstraint"><![CDATA[CREATE CONSTRAINT ON ()-[${variable}:${type}]-() ASSERT exists(${variable}.${property});${cursor}]]></template>

	<!-- Drop relationship property existence constraint -->
	<template
		id="opencypher.build-in.command.dropRelationshipPropertyExistenceConstraint"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.Command"
		deleted="false" description="Drop relationship property existence constraint"
		enabled="true" name="dropRelationshipPropertyExistenceConstraint"><![CDATA[DROP CONSTRAINT ON ()-[${variable}:${type}]-() ASSERT exists(${variable}.${property});${cursor}]]></template>

	<!-- Match -->
	<template id="opencypher.build-in.match" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_MATCH" deleted="false"
		description="Match" enabled="true" name="match"><![CDATA[MATCH (${cursor})]]></template>

	<!-- Optional Match -->
	<template id="opencypher.build-in.optionalMatch" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_OPTIONAL" deleted="false"
		description="Optional Match" enabled="true" name="optionalMatch"><![CDATA[OPTIONAL MATCH (${cursor})]]></template>

	<!-- Node -->
	<template id="opencypher.build-in.node" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.PatternPart" deleted="false"
		description="Node" enabled="true" name="node"><![CDATA[(${cursor})]]></template>

	<!-- Outgoing Relation -->
	<template id="opencypher.build-in.outgoingRelation"
		autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.PatternElementChain"
		deleted="false" description="Outgoing Relation" enabled="true"
		name="-[]-&gt;()"><![CDATA[-[${cursor}]->()]]></template>

	<!-- Incoming Relation -->
	<template id="opencypher.build-in.incomingRelation"
		autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.PatternElementChain"
		deleted="false" description="Incoming Relation" enabled="true"
		name="&lt;-[]"><![CDATA[<-[${cursor}]-()]]></template>

	<!-- Where -->
	<template id="opencypher.build-in.where" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_WHERE" deleted="false"
		description="where" enabled="true" name="where"><![CDATA[WHERE ${variableRef:CrossReference(Expression.variableRef)}${cursor}]]></template>

	<!-- Return -->
	<template id="opencypher.build-in.return" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_RETURN" deleted="false"
		description="return" enabled="true" name="return"><![CDATA[RETURN ${variableRef:CrossReference(Expression.variableRef)}${cursor}]]></template>

	<!-- Order by properties -->
	<template id="opencypher.build-in.orderByProperties"
		autoinsert="true" context="org.slizaa.neo4j.opencypher.OpenCypher.kw_ORDER"
		deleted="false" description="Order nodes by multiple properties"
		enabled="true" name="orderByProperties"><![CDATA[ORDER BY ${node1}.${property1}, ${node2}.${property2}${cursor}]]></template>

	<!-- Order by property -->
	<template id="opencypher.build-in.orderByProperty" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.Order" deleted="false"
		description="Order nodes by property" enabled="true" name="orderByProperty"><![CDATA[ORDER BY ${node}.${property}${cursor}]]></template>

	<!-- id() -->
	<template id="opencypher.build-in.id" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.FunctionInvocation"
		deleted="false" description="Returns the id of the relationship or node."
		enabled="true" name="id()"><![CDATA[id(${nodeOrRelationship})${cursor}]]></template>
		
	<!-- labels() -->
	<template id="opencypher.build-in.labels" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.FunctionInvocation"
		deleted="false" description="Returns a list of string representations for the labels attached to a node."
		enabled="true" name="labels()"><![CDATA[labels(${node})${cursor}]]></template>	
		
	<!-- type() -->
	<template id="opencypher.build-in.type" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.FunctionInvocation"
		deleted="false" description="Returns a string representation of the relationship type."
		enabled="true" name="type()"><![CDATA[type(${relationship})${cursor}]]></template>				

	<!-- starts with -->
	<template id="opencypher.build-in.startsWith" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_STARTS" deleted="false"
		description="starts with" enabled="true" name="starts with"><![CDATA[STARTS WITH '${string}${cursor}']]></template>
	
	<!-- ends with -->
	<template id="opencypher.build-in.endsWith" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_ENDS" deleted="false"
		description="ends with" enabled="true" name="ends with"><![CDATA[ENDS WITH '${string}${cursor}']]></template>
	
	<!-- contains -->
	<template id="opencypher.build-in.contains" autoinsert="true"
		context="org.slizaa.neo4j.opencypher.OpenCypher.kw_CONTAINS" deleted="false"
		description="contains" enabled="true" name="contains"><![CDATA[CONTAINS '${string}${cursor}']]></template>

</templates>